
stm32f7xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001f8  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001580  08000200  08000200  00001200  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000154  08001780  08001780  00002780  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080018d4  080018d4  0000305c  2**0
                  CONTENTS
  4 .ARM          00000008  080018d4  080018d4  000028d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080018dc  080018dc  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080018dc  080018dc  000028dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080018e0  080018e0  000028e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  080018e4  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  08001940  0000305c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  08001940  000031c8  2**0
                  ALLOC
 11 .ARM.attributes 0000002e  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000911  00000000  00000000  0000308a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000002a9  00000000  00000000  0000399b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000b8  00000000  00000000  00003c48  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000007f  00000000  00000000  00003d00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000022f1  00000000  00000000  00003d7f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000fa8  00000000  00000000  00006070  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009f00  00000000  00000000  00007018  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00010f18  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000a84  00000000  00000000  00010f5c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000077  00000000  00000000  000119e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000200 <__do_global_dtors_aux>:
 8000200:	b510      	push	{r4, lr}
 8000202:	4c05      	ldr	r4, [pc, #20]	@ (8000218 <__do_global_dtors_aux+0x18>)
 8000204:	7823      	ldrb	r3, [r4, #0]
 8000206:	b933      	cbnz	r3, 8000216 <__do_global_dtors_aux+0x16>
 8000208:	4b04      	ldr	r3, [pc, #16]	@ (800021c <__do_global_dtors_aux+0x1c>)
 800020a:	b113      	cbz	r3, 8000212 <__do_global_dtors_aux+0x12>
 800020c:	4804      	ldr	r0, [pc, #16]	@ (8000220 <__do_global_dtors_aux+0x20>)
 800020e:	f3af 8000 	nop.w
 8000212:	2301      	movs	r3, #1
 8000214:	7023      	strb	r3, [r4, #0]
 8000216:	bd10      	pop	{r4, pc}
 8000218:	2000005c 	.word	0x2000005c
 800021c:	00000000 	.word	0x00000000
 8000220:	08001768 	.word	0x08001768

08000224 <frame_dummy>:
 8000224:	b508      	push	{r3, lr}
 8000226:	4b03      	ldr	r3, [pc, #12]	@ (8000234 <frame_dummy+0x10>)
 8000228:	b11b      	cbz	r3, 8000232 <frame_dummy+0xe>
 800022a:	4903      	ldr	r1, [pc, #12]	@ (8000238 <frame_dummy+0x14>)
 800022c:	4803      	ldr	r0, [pc, #12]	@ (800023c <frame_dummy+0x18>)
 800022e:	f3af 8000 	nop.w
 8000232:	bd08      	pop	{r3, pc}
 8000234:	00000000 	.word	0x00000000
 8000238:	20000060 	.word	0x20000060
 800023c:	08001768 	.word	0x08001768

08000240 <memchr>:
 8000240:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000244:	2a10      	cmp	r2, #16
 8000246:	db2b      	blt.n	80002a0 <memchr+0x60>
 8000248:	f010 0f07 	tst.w	r0, #7
 800024c:	d008      	beq.n	8000260 <memchr+0x20>
 800024e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000252:	3a01      	subs	r2, #1
 8000254:	428b      	cmp	r3, r1
 8000256:	d02d      	beq.n	80002b4 <memchr+0x74>
 8000258:	f010 0f07 	tst.w	r0, #7
 800025c:	b342      	cbz	r2, 80002b0 <memchr+0x70>
 800025e:	d1f6      	bne.n	800024e <memchr+0xe>
 8000260:	b4f0      	push	{r4, r5, r6, r7}
 8000262:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000266:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800026a:	f022 0407 	bic.w	r4, r2, #7
 800026e:	f07f 0700 	mvns.w	r7, #0
 8000272:	2300      	movs	r3, #0
 8000274:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000278:	3c08      	subs	r4, #8
 800027a:	ea85 0501 	eor.w	r5, r5, r1
 800027e:	ea86 0601 	eor.w	r6, r6, r1
 8000282:	fa85 f547 	uadd8	r5, r5, r7
 8000286:	faa3 f587 	sel	r5, r3, r7
 800028a:	fa86 f647 	uadd8	r6, r6, r7
 800028e:	faa5 f687 	sel	r6, r5, r7
 8000292:	b98e      	cbnz	r6, 80002b8 <memchr+0x78>
 8000294:	d1ee      	bne.n	8000274 <memchr+0x34>
 8000296:	bcf0      	pop	{r4, r5, r6, r7}
 8000298:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800029c:	f002 0207 	and.w	r2, r2, #7
 80002a0:	b132      	cbz	r2, 80002b0 <memchr+0x70>
 80002a2:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002a6:	3a01      	subs	r2, #1
 80002a8:	ea83 0301 	eor.w	r3, r3, r1
 80002ac:	b113      	cbz	r3, 80002b4 <memchr+0x74>
 80002ae:	d1f8      	bne.n	80002a2 <memchr+0x62>
 80002b0:	2000      	movs	r0, #0
 80002b2:	4770      	bx	lr
 80002b4:	3801      	subs	r0, #1
 80002b6:	4770      	bx	lr
 80002b8:	2d00      	cmp	r5, #0
 80002ba:	bf06      	itte	eq
 80002bc:	4635      	moveq	r5, r6
 80002be:	3803      	subeq	r0, #3
 80002c0:	3807      	subne	r0, #7
 80002c2:	f015 0f01 	tst.w	r5, #1
 80002c6:	d107      	bne.n	80002d8 <memchr+0x98>
 80002c8:	3001      	adds	r0, #1
 80002ca:	f415 7f80 	tst.w	r5, #256	@ 0x100
 80002ce:	bf02      	ittt	eq
 80002d0:	3001      	addeq	r0, #1
 80002d2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002d6:	3001      	addeq	r0, #1
 80002d8:	bcf0      	pop	{r4, r5, r6, r7}
 80002da:	3801      	subs	r0, #1
 80002dc:	4770      	bx	lr
 80002de:	bf00      	nop

080002e0 <delay>:
#include "stm32f769xx.h"

void delay(void) {
 80002e0:	b480      	push	{r7}
 80002e2:	b083      	sub	sp, #12
 80002e4:	af00      	add	r7, sp, #0
  for(uint32_t i = 0; i < 500000; i++);
 80002e6:	2300      	movs	r3, #0
 80002e8:	607b      	str	r3, [r7, #4]
 80002ea:	e002      	b.n	80002f2 <delay+0x12>
 80002ec:	687b      	ldr	r3, [r7, #4]
 80002ee:	3301      	adds	r3, #1
 80002f0:	607b      	str	r3, [r7, #4]
 80002f2:	687b      	ldr	r3, [r7, #4]
 80002f4:	4a04      	ldr	r2, [pc, #16]	@ (8000308 <delay+0x28>)
 80002f6:	4293      	cmp	r3, r2
 80002f8:	d9f8      	bls.n	80002ec <delay+0xc>
}
 80002fa:	bf00      	nop
 80002fc:	bf00      	nop
 80002fe:	370c      	adds	r7, #12
 8000300:	46bd      	mov	sp, r7
 8000302:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000306:	4770      	bx	lr
 8000308:	0007a11f 	.word	0x0007a11f

0800030c <main>:

int main(void) {
 800030c:	b580      	push	{r7, lr}
 800030e:	b08a      	sub	sp, #40	@ 0x28
 8000310:	af00      	add	r7, sp, #0

  // Define the LED GPIO Pin Config
  GPIO_PinConfig_t LED_PinConfig;
  LED_PinConfig.GPIO_PinNumber = GPIO_PIN_4;
 8000312:	2304      	movs	r3, #4
 8000314:	f887 3020 	strb.w	r3, [r7, #32]
  LED_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000318:	2301      	movs	r3, #1
 800031a:	f887 3021 	strb.w	r3, [r7, #33]	@ 0x21
  LED_PinConfig.GPIO_PinSpeed = GPIO_OSPEED_LOW;
 800031e:	2300      	movs	r3, #0
 8000320:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
  LED_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000324:	2300      	movs	r3, #0
 8000326:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
  LED_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 800032a:	2300      	movs	r3, #0
 800032c:	f887 3024 	strb.w	r3, [r7, #36]	@ 0x24

  // Define the BTN GPIO Pin Config
  GPIO_PinConfig_t BTN_PinConfig;
  BTN_PinConfig.GPIO_PinNumber = GPIO_PIN_0;
 8000330:	2300      	movs	r3, #0
 8000332:	763b      	strb	r3, [r7, #24]
  BTN_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 8000334:	2300      	movs	r3, #0
 8000336:	767b      	strb	r3, [r7, #25]
  BTN_PinConfig.GPIO_PinSpeed = GPIO_OSPEED_LOW;
 8000338:	2300      	movs	r3, #0
 800033a:	76bb      	strb	r3, [r7, #26]
  BTN_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800033c:	2300      	movs	r3, #0
 800033e:	76fb      	strb	r3, [r7, #27]

  // Define LED GPIO Handle
  GPIO_Handle_t LED_pGPIOHandle;
  LED_pGPIOHandle.pGPIOx = GPIOD;
 8000340:	4b1e      	ldr	r3, [pc, #120]	@ (80003bc <main+0xb0>)
 8000342:	60fb      	str	r3, [r7, #12]
  LED_pGPIOHandle.GPIO_PinConfig = LED_PinConfig;
 8000344:	f107 0310 	add.w	r3, r7, #16
 8000348:	f107 0220 	add.w	r2, r7, #32
 800034c:	e892 0003 	ldmia.w	r2, {r0, r1}
 8000350:	6018      	str	r0, [r3, #0]
 8000352:	3304      	adds	r3, #4
 8000354:	8019      	strh	r1, [r3, #0]
  
  // Define BTN GPIO Handle
  GPIO_Handle_t BTN_pGPIOHandle;
  BTN_pGPIOHandle.pGPIOx = GPIOA;
 8000356:	4b1a      	ldr	r3, [pc, #104]	@ (80003c0 <main+0xb4>)
 8000358:	603b      	str	r3, [r7, #0]
  BTN_pGPIOHandle.GPIO_PinConfig = BTN_PinConfig;
 800035a:	1d3b      	adds	r3, r7, #4
 800035c:	f107 0218 	add.w	r2, r7, #24
 8000360:	e892 0003 	ldmia.w	r2, {r0, r1}
 8000364:	6018      	str	r0, [r3, #0]
 8000366:	3304      	adds	r3, #4
 8000368:	8019      	strh	r1, [r3, #0]

  // Enable the clock for GPIOD
  GPIO_PeriClockControl(LED_pGPIOHandle.pGPIOx, ENABLE);
 800036a:	68fb      	ldr	r3, [r7, #12]
 800036c:	2101      	movs	r1, #1
 800036e:	4618      	mov	r0, r3
 8000370:	f000 f852 	bl	8000418 <GPIO_PeriClockControl>

  // Enable the clock for GPIOA
  GPIO_PeriClockControl(BTN_pGPIOHandle.pGPIOx, ENABLE);  // Initialize GPIOD
 8000374:	683b      	ldr	r3, [r7, #0]
 8000376:	2101      	movs	r1, #1
 8000378:	4618      	mov	r0, r3
 800037a:	f000 f84d 	bl	8000418 <GPIO_PeriClockControl>

  // Initialize both handles
  GPIO_Init(&LED_pGPIOHandle);
 800037e:	f107 030c 	add.w	r3, r7, #12
 8000382:	4618      	mov	r0, r3
 8000384:	f000 f972 	bl	800066c <GPIO_Init>
  GPIO_Init(&BTN_pGPIOHandle);
 8000388:	463b      	mov	r3, r7
 800038a:	4618      	mov	r0, r3
 800038c:	f000 f96e 	bl	800066c <GPIO_Init>

  while(1) {
    uint8_t readVal;
    readVal = GPIO_ReadFromInputPin(BTN_pGPIOHandle.pGPIOx, BTN_pGPIOHandle.GPIO_PinConfig.GPIO_PinNumber);
 8000390:	683b      	ldr	r3, [r7, #0]
 8000392:	793a      	ldrb	r2, [r7, #4]
 8000394:	4611      	mov	r1, r2
 8000396:	4618      	mov	r0, r3
 8000398:	f000 fa52 	bl	8000840 <GPIO_ReadFromInputPin>
 800039c:	4603      	mov	r3, r0
 800039e:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
    if(readVal) {
 80003a2:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 80003a6:	2b00      	cmp	r3, #0
 80003a8:	d005      	beq.n	80003b6 <main+0xaa>
      GPIO_ToggleOutputPin(LED_pGPIOHandle.pGPIOx, LED_pGPIOHandle.GPIO_PinConfig.GPIO_PinNumber);
 80003aa:	68fb      	ldr	r3, [r7, #12]
 80003ac:	7c3a      	ldrb	r2, [r7, #16]
 80003ae:	4611      	mov	r1, r2
 80003b0:	4618      	mov	r0, r3
 80003b2:	f000 fa5b 	bl	800086c <GPIO_ToggleOutputPin>
    }
    delay();
 80003b6:	f7ff ff93 	bl	80002e0 <delay>
  while(1) {
 80003ba:	e7e9      	b.n	8000390 <main+0x84>
 80003bc:	40020c00 	.word	0x40020c00
 80003c0:	40020000 	.word	0x40020000

080003c4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80003c4:	480d      	ldr	r0, [pc, #52]	@ (80003fc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80003c6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80003c8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80003cc:	480c      	ldr	r0, [pc, #48]	@ (8000400 <LoopForever+0x6>)
  ldr r1, =_edata
 80003ce:	490d      	ldr	r1, [pc, #52]	@ (8000404 <LoopForever+0xa>)
  ldr r2, =_sidata
 80003d0:	4a0d      	ldr	r2, [pc, #52]	@ (8000408 <LoopForever+0xe>)
  movs r3, #0
 80003d2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80003d4:	e002      	b.n	80003dc <LoopCopyDataInit>

080003d6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80003d6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80003d8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80003da:	3304      	adds	r3, #4

080003dc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80003dc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80003de:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80003e0:	d3f9      	bcc.n	80003d6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80003e2:	4a0a      	ldr	r2, [pc, #40]	@ (800040c <LoopForever+0x12>)
  ldr r4, =_ebss
 80003e4:	4c0a      	ldr	r4, [pc, #40]	@ (8000410 <LoopForever+0x16>)
  movs r3, #0
 80003e6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80003e8:	e001      	b.n	80003ee <LoopFillZerobss>

080003ea <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80003ea:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80003ec:	3204      	adds	r2, #4

080003ee <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80003ee:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80003f0:	d3fb      	bcc.n	80003ea <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80003f2:	f000 fbb7 	bl	8000b64 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80003f6:	f7ff ff89 	bl	800030c <main>

080003fa <LoopForever>:

LoopForever:
  b LoopForever
 80003fa:	e7fe      	b.n	80003fa <LoopForever>
  ldr   r0, =_estack
 80003fc:	20080000 	.word	0x20080000
  ldr r0, =_sdata
 8000400:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000404:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000408:	080018e4 	.word	0x080018e4
  ldr r2, =_sbss
 800040c:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8000410:	200001c8 	.word	0x200001c8

08000414 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000414:	e7fe      	b.n	8000414 <ADC_IRQHandler>
	...

08000418 <GPIO_PeriClockControl>:
 *
 * @return            - none
 *
 * @Note              - none
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi) {
 8000418:	b580      	push	{r7, lr}
 800041a:	b082      	sub	sp, #8
 800041c:	af00      	add	r7, sp, #0
 800041e:	6078      	str	r0, [r7, #4]
 8000420:	460b      	mov	r3, r1
 8000422:	70fb      	strb	r3, [r7, #3]
  if(EnorDi == ENABLE) {
 8000424:	78fb      	ldrb	r3, [r7, #3]
 8000426:	2b01      	cmp	r3, #1
 8000428:	d17c      	bne.n	8000524 <GPIO_PeriClockControl+0x10c>
    if(pGPIOx == GPIOA) GPIOA_PCLK_EN();
 800042a:	687b      	ldr	r3, [r7, #4]
 800042c:	4a81      	ldr	r2, [pc, #516]	@ (8000634 <GPIO_PeriClockControl+0x21c>)
 800042e:	4293      	cmp	r3, r2
 8000430:	d106      	bne.n	8000440 <GPIO_PeriClockControl+0x28>
 8000432:	4b81      	ldr	r3, [pc, #516]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 8000434:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000436:	4a80      	ldr	r2, [pc, #512]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 8000438:	f043 0301 	orr.w	r3, r3, #1
 800043c:	6313      	str	r3, [r2, #48]	@ 0x30
    }
  }
  else {
    printf("ERROR: Invalid EnorDi variable passed to GPIO_PeriClockControl()");
  }
}
 800043e:	e0f4      	b.n	800062a <GPIO_PeriClockControl+0x212>
    else if(pGPIOx == GPIOB) GPIOB_PCLK_EN();
 8000440:	687b      	ldr	r3, [r7, #4]
 8000442:	4a7e      	ldr	r2, [pc, #504]	@ (800063c <GPIO_PeriClockControl+0x224>)
 8000444:	4293      	cmp	r3, r2
 8000446:	d106      	bne.n	8000456 <GPIO_PeriClockControl+0x3e>
 8000448:	4b7b      	ldr	r3, [pc, #492]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 800044a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800044c:	4a7a      	ldr	r2, [pc, #488]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 800044e:	f043 0302 	orr.w	r3, r3, #2
 8000452:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000454:	e0e9      	b.n	800062a <GPIO_PeriClockControl+0x212>
    else if(pGPIOx == GPIOC) GPIOC_PCLK_EN();
 8000456:	687b      	ldr	r3, [r7, #4]
 8000458:	4a79      	ldr	r2, [pc, #484]	@ (8000640 <GPIO_PeriClockControl+0x228>)
 800045a:	4293      	cmp	r3, r2
 800045c:	d106      	bne.n	800046c <GPIO_PeriClockControl+0x54>
 800045e:	4b76      	ldr	r3, [pc, #472]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 8000460:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000462:	4a75      	ldr	r2, [pc, #468]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 8000464:	f043 0304 	orr.w	r3, r3, #4
 8000468:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800046a:	e0de      	b.n	800062a <GPIO_PeriClockControl+0x212>
    else if(pGPIOx == GPIOD) GPIOD_PCLK_EN();
 800046c:	687b      	ldr	r3, [r7, #4]
 800046e:	4a75      	ldr	r2, [pc, #468]	@ (8000644 <GPIO_PeriClockControl+0x22c>)
 8000470:	4293      	cmp	r3, r2
 8000472:	d106      	bne.n	8000482 <GPIO_PeriClockControl+0x6a>
 8000474:	4b70      	ldr	r3, [pc, #448]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 8000476:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000478:	4a6f      	ldr	r2, [pc, #444]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 800047a:	f043 0308 	orr.w	r3, r3, #8
 800047e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000480:	e0d3      	b.n	800062a <GPIO_PeriClockControl+0x212>
    else if(pGPIOx == GPIOE) GPIOE_PCLK_EN();
 8000482:	687b      	ldr	r3, [r7, #4]
 8000484:	4a70      	ldr	r2, [pc, #448]	@ (8000648 <GPIO_PeriClockControl+0x230>)
 8000486:	4293      	cmp	r3, r2
 8000488:	d106      	bne.n	8000498 <GPIO_PeriClockControl+0x80>
 800048a:	4b6b      	ldr	r3, [pc, #428]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 800048c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800048e:	4a6a      	ldr	r2, [pc, #424]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 8000490:	f043 0310 	orr.w	r3, r3, #16
 8000494:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000496:	e0c8      	b.n	800062a <GPIO_PeriClockControl+0x212>
    else if(pGPIOx == GPIOF) GPIOF_PCLK_EN();
 8000498:	687b      	ldr	r3, [r7, #4]
 800049a:	4a6c      	ldr	r2, [pc, #432]	@ (800064c <GPIO_PeriClockControl+0x234>)
 800049c:	4293      	cmp	r3, r2
 800049e:	d106      	bne.n	80004ae <GPIO_PeriClockControl+0x96>
 80004a0:	4b65      	ldr	r3, [pc, #404]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 80004a2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004a4:	4a64      	ldr	r2, [pc, #400]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 80004a6:	f043 0320 	orr.w	r3, r3, #32
 80004aa:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80004ac:	e0bd      	b.n	800062a <GPIO_PeriClockControl+0x212>
    else if(pGPIOx == GPIOG) GPIOG_PCLK_EN();
 80004ae:	687b      	ldr	r3, [r7, #4]
 80004b0:	4a67      	ldr	r2, [pc, #412]	@ (8000650 <GPIO_PeriClockControl+0x238>)
 80004b2:	4293      	cmp	r3, r2
 80004b4:	d106      	bne.n	80004c4 <GPIO_PeriClockControl+0xac>
 80004b6:	4b60      	ldr	r3, [pc, #384]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 80004b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004ba:	4a5f      	ldr	r2, [pc, #380]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 80004bc:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80004c0:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80004c2:	e0b2      	b.n	800062a <GPIO_PeriClockControl+0x212>
    else if(pGPIOx == GPIOH) GPIOB_PCLK_EN();
 80004c4:	687b      	ldr	r3, [r7, #4]
 80004c6:	4a63      	ldr	r2, [pc, #396]	@ (8000654 <GPIO_PeriClockControl+0x23c>)
 80004c8:	4293      	cmp	r3, r2
 80004ca:	d106      	bne.n	80004da <GPIO_PeriClockControl+0xc2>
 80004cc:	4b5a      	ldr	r3, [pc, #360]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 80004ce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004d0:	4a59      	ldr	r2, [pc, #356]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 80004d2:	f043 0302 	orr.w	r3, r3, #2
 80004d6:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80004d8:	e0a7      	b.n	800062a <GPIO_PeriClockControl+0x212>
    else if(pGPIOx == GPIOI) GPIOB_PCLK_EN();
 80004da:	687b      	ldr	r3, [r7, #4]
 80004dc:	4a5e      	ldr	r2, [pc, #376]	@ (8000658 <GPIO_PeriClockControl+0x240>)
 80004de:	4293      	cmp	r3, r2
 80004e0:	d106      	bne.n	80004f0 <GPIO_PeriClockControl+0xd8>
 80004e2:	4b55      	ldr	r3, [pc, #340]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 80004e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004e6:	4a54      	ldr	r2, [pc, #336]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 80004e8:	f043 0302 	orr.w	r3, r3, #2
 80004ec:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80004ee:	e09c      	b.n	800062a <GPIO_PeriClockControl+0x212>
    else if(pGPIOx == GPIOJ) GPIOB_PCLK_EN();
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	4a5a      	ldr	r2, [pc, #360]	@ (800065c <GPIO_PeriClockControl+0x244>)
 80004f4:	4293      	cmp	r3, r2
 80004f6:	d106      	bne.n	8000506 <GPIO_PeriClockControl+0xee>
 80004f8:	4b4f      	ldr	r3, [pc, #316]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 80004fa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004fc:	4a4e      	ldr	r2, [pc, #312]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 80004fe:	f043 0302 	orr.w	r3, r3, #2
 8000502:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000504:	e091      	b.n	800062a <GPIO_PeriClockControl+0x212>
    else if(pGPIOx == GPIOK) GPIOB_PCLK_EN();
 8000506:	687b      	ldr	r3, [r7, #4]
 8000508:	4a55      	ldr	r2, [pc, #340]	@ (8000660 <GPIO_PeriClockControl+0x248>)
 800050a:	4293      	cmp	r3, r2
 800050c:	d106      	bne.n	800051c <GPIO_PeriClockControl+0x104>
 800050e:	4b4a      	ldr	r3, [pc, #296]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 8000510:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000512:	4a49      	ldr	r2, [pc, #292]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 8000514:	f043 0302 	orr.w	r3, r3, #2
 8000518:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800051a:	e086      	b.n	800062a <GPIO_PeriClockControl+0x212>
      printf("ERROR: Unrecognized Peripheral passed to GPIO_PeriClockControl()");
 800051c:	4851      	ldr	r0, [pc, #324]	@ (8000664 <GPIO_PeriClockControl+0x24c>)
 800051e:	f000 fa7d 	bl	8000a1c <iprintf>
}
 8000522:	e082      	b.n	800062a <GPIO_PeriClockControl+0x212>
  else if(EnorDi == DISABLE) {
 8000524:	78fb      	ldrb	r3, [r7, #3]
 8000526:	2b00      	cmp	r3, #0
 8000528:	d17c      	bne.n	8000624 <GPIO_PeriClockControl+0x20c>
    if(pGPIOx == GPIOA) GPIOA_PCLK_DI();
 800052a:	687b      	ldr	r3, [r7, #4]
 800052c:	4a41      	ldr	r2, [pc, #260]	@ (8000634 <GPIO_PeriClockControl+0x21c>)
 800052e:	4293      	cmp	r3, r2
 8000530:	d106      	bne.n	8000540 <GPIO_PeriClockControl+0x128>
 8000532:	4b41      	ldr	r3, [pc, #260]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 8000534:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000536:	4a40      	ldr	r2, [pc, #256]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 8000538:	f023 0301 	bic.w	r3, r3, #1
 800053c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800053e:	e074      	b.n	800062a <GPIO_PeriClockControl+0x212>
    else if(pGPIOx == GPIOB) GPIOB_PCLK_DI();
 8000540:	687b      	ldr	r3, [r7, #4]
 8000542:	4a3e      	ldr	r2, [pc, #248]	@ (800063c <GPIO_PeriClockControl+0x224>)
 8000544:	4293      	cmp	r3, r2
 8000546:	d106      	bne.n	8000556 <GPIO_PeriClockControl+0x13e>
 8000548:	4b3b      	ldr	r3, [pc, #236]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 800054a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800054c:	4a3a      	ldr	r2, [pc, #232]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 800054e:	f023 0302 	bic.w	r3, r3, #2
 8000552:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000554:	e069      	b.n	800062a <GPIO_PeriClockControl+0x212>
    else if(pGPIOx == GPIOC) GPIOC_PCLK_DI();
 8000556:	687b      	ldr	r3, [r7, #4]
 8000558:	4a39      	ldr	r2, [pc, #228]	@ (8000640 <GPIO_PeriClockControl+0x228>)
 800055a:	4293      	cmp	r3, r2
 800055c:	d106      	bne.n	800056c <GPIO_PeriClockControl+0x154>
 800055e:	4b36      	ldr	r3, [pc, #216]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 8000560:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000562:	4a35      	ldr	r2, [pc, #212]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 8000564:	f023 0304 	bic.w	r3, r3, #4
 8000568:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800056a:	e05e      	b.n	800062a <GPIO_PeriClockControl+0x212>
    else if(pGPIOx == GPIOD) GPIOD_PCLK_DI();
 800056c:	687b      	ldr	r3, [r7, #4]
 800056e:	4a35      	ldr	r2, [pc, #212]	@ (8000644 <GPIO_PeriClockControl+0x22c>)
 8000570:	4293      	cmp	r3, r2
 8000572:	d106      	bne.n	8000582 <GPIO_PeriClockControl+0x16a>
 8000574:	4b30      	ldr	r3, [pc, #192]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 8000576:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000578:	4a2f      	ldr	r2, [pc, #188]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 800057a:	f023 0308 	bic.w	r3, r3, #8
 800057e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000580:	e053      	b.n	800062a <GPIO_PeriClockControl+0x212>
    else if(pGPIOx == GPIOE) GPIOE_PCLK_DI();
 8000582:	687b      	ldr	r3, [r7, #4]
 8000584:	4a30      	ldr	r2, [pc, #192]	@ (8000648 <GPIO_PeriClockControl+0x230>)
 8000586:	4293      	cmp	r3, r2
 8000588:	d106      	bne.n	8000598 <GPIO_PeriClockControl+0x180>
 800058a:	4b2b      	ldr	r3, [pc, #172]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 800058c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800058e:	4a2a      	ldr	r2, [pc, #168]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 8000590:	f023 0310 	bic.w	r3, r3, #16
 8000594:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000596:	e048      	b.n	800062a <GPIO_PeriClockControl+0x212>
    else if(pGPIOx == GPIOF) GPIOF_PCLK_DI();
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	4a2c      	ldr	r2, [pc, #176]	@ (800064c <GPIO_PeriClockControl+0x234>)
 800059c:	4293      	cmp	r3, r2
 800059e:	d106      	bne.n	80005ae <GPIO_PeriClockControl+0x196>
 80005a0:	4b25      	ldr	r3, [pc, #148]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 80005a2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80005a4:	4a24      	ldr	r2, [pc, #144]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 80005a6:	f023 0320 	bic.w	r3, r3, #32
 80005aa:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80005ac:	e03d      	b.n	800062a <GPIO_PeriClockControl+0x212>
    else if(pGPIOx == GPIOG) GPIOG_PCLK_DI();
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	4a27      	ldr	r2, [pc, #156]	@ (8000650 <GPIO_PeriClockControl+0x238>)
 80005b2:	4293      	cmp	r3, r2
 80005b4:	d106      	bne.n	80005c4 <GPIO_PeriClockControl+0x1ac>
 80005b6:	4b20      	ldr	r3, [pc, #128]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 80005b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80005ba:	4a1f      	ldr	r2, [pc, #124]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 80005bc:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80005c0:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80005c2:	e032      	b.n	800062a <GPIO_PeriClockControl+0x212>
    else if(pGPIOx == GPIOH) GPIOH_PCLK_DI();
 80005c4:	687b      	ldr	r3, [r7, #4]
 80005c6:	4a23      	ldr	r2, [pc, #140]	@ (8000654 <GPIO_PeriClockControl+0x23c>)
 80005c8:	4293      	cmp	r3, r2
 80005ca:	d106      	bne.n	80005da <GPIO_PeriClockControl+0x1c2>
 80005cc:	4b1a      	ldr	r3, [pc, #104]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 80005ce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80005d0:	4a19      	ldr	r2, [pc, #100]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 80005d2:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80005d6:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80005d8:	e027      	b.n	800062a <GPIO_PeriClockControl+0x212>
    else if(pGPIOx == GPIOI) GPIOI_PCLK_DI();
 80005da:	687b      	ldr	r3, [r7, #4]
 80005dc:	4a1e      	ldr	r2, [pc, #120]	@ (8000658 <GPIO_PeriClockControl+0x240>)
 80005de:	4293      	cmp	r3, r2
 80005e0:	d106      	bne.n	80005f0 <GPIO_PeriClockControl+0x1d8>
 80005e2:	4b15      	ldr	r3, [pc, #84]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 80005e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80005e6:	4a14      	ldr	r2, [pc, #80]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 80005e8:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80005ec:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80005ee:	e01c      	b.n	800062a <GPIO_PeriClockControl+0x212>
    else if(pGPIOx == GPIOJ) GPIOJ_PCLK_DI();
 80005f0:	687b      	ldr	r3, [r7, #4]
 80005f2:	4a1a      	ldr	r2, [pc, #104]	@ (800065c <GPIO_PeriClockControl+0x244>)
 80005f4:	4293      	cmp	r3, r2
 80005f6:	d106      	bne.n	8000606 <GPIO_PeriClockControl+0x1ee>
 80005f8:	4b0f      	ldr	r3, [pc, #60]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 80005fa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80005fc:	4a0e      	ldr	r2, [pc, #56]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 80005fe:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8000602:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000604:	e011      	b.n	800062a <GPIO_PeriClockControl+0x212>
    else if(pGPIOx == GPIOK) GPIOK_PCLK_DI();
 8000606:	687b      	ldr	r3, [r7, #4]
 8000608:	4a15      	ldr	r2, [pc, #84]	@ (8000660 <GPIO_PeriClockControl+0x248>)
 800060a:	4293      	cmp	r3, r2
 800060c:	d106      	bne.n	800061c <GPIO_PeriClockControl+0x204>
 800060e:	4b0a      	ldr	r3, [pc, #40]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 8000610:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000612:	4a09      	ldr	r2, [pc, #36]	@ (8000638 <GPIO_PeriClockControl+0x220>)
 8000614:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8000618:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800061a:	e006      	b.n	800062a <GPIO_PeriClockControl+0x212>
      printf("ERROR: Unrecognized Peripheral passed to GPIO_PeriClockControl()");
 800061c:	4811      	ldr	r0, [pc, #68]	@ (8000664 <GPIO_PeriClockControl+0x24c>)
 800061e:	f000 f9fd 	bl	8000a1c <iprintf>
}
 8000622:	e002      	b.n	800062a <GPIO_PeriClockControl+0x212>
    printf("ERROR: Invalid EnorDi variable passed to GPIO_PeriClockControl()");
 8000624:	4810      	ldr	r0, [pc, #64]	@ (8000668 <GPIO_PeriClockControl+0x250>)
 8000626:	f000 f9f9 	bl	8000a1c <iprintf>
}
 800062a:	bf00      	nop
 800062c:	3708      	adds	r7, #8
 800062e:	46bd      	mov	sp, r7
 8000630:	bd80      	pop	{r7, pc}
 8000632:	bf00      	nop
 8000634:	40020000 	.word	0x40020000
 8000638:	40023800 	.word	0x40023800
 800063c:	40020400 	.word	0x40020400
 8000640:	40020800 	.word	0x40020800
 8000644:	40020c00 	.word	0x40020c00
 8000648:	40021000 	.word	0x40021000
 800064c:	40021400 	.word	0x40021400
 8000650:	40021800 	.word	0x40021800
 8000654:	40021c00 	.word	0x40021c00
 8000658:	40022000 	.word	0x40022000
 800065c:	40022400 	.word	0x40022400
 8000660:	40022800 	.word	0x40022800
 8000664:	08001780 	.word	0x08001780
 8000668:	080017c4 	.word	0x080017c4

0800066c <GPIO_Init>:
 *
 * @return            - none
 *
 * @Note              - none
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle) {
 800066c:	b580      	push	{r7, lr}
 800066e:	b084      	sub	sp, #16
 8000670:	af00      	add	r7, sp, #0
 8000672:	6078      	str	r0, [r7, #4]
  uint32_t temp = 0;
 8000674:	2300      	movs	r3, #0
 8000676:	60fb      	str	r3, [r7, #12]

  // Set Mode
  if(pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode <= GPIO_MODE_ANALOG) {
 8000678:	687b      	ldr	r3, [r7, #4]
 800067a:	7a5b      	ldrb	r3, [r3, #9]
 800067c:	2b03      	cmp	r3, #3
 800067e:	d81e      	bhi.n	80006be <GPIO_Init+0x52>
    pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000680:	687b      	ldr	r3, [r7, #4]
 8000682:	681b      	ldr	r3, [r3, #0]
 8000684:	681a      	ldr	r2, [r3, #0]
 8000686:	687b      	ldr	r3, [r7, #4]
 8000688:	791b      	ldrb	r3, [r3, #4]
 800068a:	4619      	mov	r1, r3
 800068c:	2303      	movs	r3, #3
 800068e:	408b      	lsls	r3, r1
 8000690:	43db      	mvns	r3, r3
 8000692:	4619      	mov	r1, r3
 8000694:	687b      	ldr	r3, [r7, #4]
 8000696:	681b      	ldr	r3, [r3, #0]
 8000698:	400a      	ands	r2, r1
 800069a:	601a      	str	r2, [r3, #0]
    temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800069c:	687b      	ldr	r3, [r7, #4]
 800069e:	795b      	ldrb	r3, [r3, #5]
 80006a0:	461a      	mov	r2, r3
 80006a2:	687b      	ldr	r3, [r7, #4]
 80006a4:	791b      	ldrb	r3, [r3, #4]
 80006a6:	005b      	lsls	r3, r3, #1
 80006a8:	fa02 f303 	lsl.w	r3, r2, r3
 80006ac:	60fb      	str	r3, [r7, #12]
    pGPIOHandle->pGPIOx->MODER |= temp;
 80006ae:	687b      	ldr	r3, [r7, #4]
 80006b0:	681b      	ldr	r3, [r3, #0]
 80006b2:	6819      	ldr	r1, [r3, #0]
 80006b4:	687b      	ldr	r3, [r7, #4]
 80006b6:	681b      	ldr	r3, [r3, #0]
 80006b8:	68fa      	ldr	r2, [r7, #12]
 80006ba:	430a      	orrs	r2, r1
 80006bc:	601a      	str	r2, [r3, #0]
  }
  else {
    // TODO: Handle Interrupt mode
  }
  temp = 0;
 80006be:	2300      	movs	r3, #0
 80006c0:	60fb      	str	r3, [r7, #12]

  // 2. Configure the speed
  pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006c2:	687b      	ldr	r3, [r7, #4]
 80006c4:	681b      	ldr	r3, [r3, #0]
 80006c6:	689a      	ldr	r2, [r3, #8]
 80006c8:	687b      	ldr	r3, [r7, #4]
 80006ca:	791b      	ldrb	r3, [r3, #4]
 80006cc:	4619      	mov	r1, r3
 80006ce:	2303      	movs	r3, #3
 80006d0:	408b      	lsls	r3, r1
 80006d2:	43db      	mvns	r3, r3
 80006d4:	4619      	mov	r1, r3
 80006d6:	687b      	ldr	r3, [r7, #4]
 80006d8:	681b      	ldr	r3, [r3, #0]
 80006da:	400a      	ands	r2, r1
 80006dc:	609a      	str	r2, [r3, #8]
  temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006de:	687b      	ldr	r3, [r7, #4]
 80006e0:	799b      	ldrb	r3, [r3, #6]
 80006e2:	461a      	mov	r2, r3
 80006e4:	687b      	ldr	r3, [r7, #4]
 80006e6:	791b      	ldrb	r3, [r3, #4]
 80006e8:	005b      	lsls	r3, r3, #1
 80006ea:	fa02 f303 	lsl.w	r3, r2, r3
 80006ee:	60fb      	str	r3, [r7, #12]
  pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80006f0:	687b      	ldr	r3, [r7, #4]
 80006f2:	681b      	ldr	r3, [r3, #0]
 80006f4:	6899      	ldr	r1, [r3, #8]
 80006f6:	687b      	ldr	r3, [r7, #4]
 80006f8:	681b      	ldr	r3, [r3, #0]
 80006fa:	68fa      	ldr	r2, [r7, #12]
 80006fc:	430a      	orrs	r2, r1
 80006fe:	609a      	str	r2, [r3, #8]
  temp = 0;
 8000700:	2300      	movs	r3, #0
 8000702:	60fb      	str	r3, [r7, #12]

  // 3. Configure the pupd settings
  pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000704:	687b      	ldr	r3, [r7, #4]
 8000706:	681b      	ldr	r3, [r3, #0]
 8000708:	68da      	ldr	r2, [r3, #12]
 800070a:	687b      	ldr	r3, [r7, #4]
 800070c:	791b      	ldrb	r3, [r3, #4]
 800070e:	4619      	mov	r1, r3
 8000710:	2303      	movs	r3, #3
 8000712:	408b      	lsls	r3, r1
 8000714:	43db      	mvns	r3, r3
 8000716:	4619      	mov	r1, r3
 8000718:	687b      	ldr	r3, [r7, #4]
 800071a:	681b      	ldr	r3, [r3, #0]
 800071c:	400a      	ands	r2, r1
 800071e:	60da      	str	r2, [r3, #12]
  temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000720:	687b      	ldr	r3, [r7, #4]
 8000722:	79db      	ldrb	r3, [r3, #7]
 8000724:	461a      	mov	r2, r3
 8000726:	687b      	ldr	r3, [r7, #4]
 8000728:	791b      	ldrb	r3, [r3, #4]
 800072a:	005b      	lsls	r3, r3, #1
 800072c:	fa02 f303 	lsl.w	r3, r2, r3
 8000730:	60fb      	str	r3, [r7, #12]
  pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000732:	687b      	ldr	r3, [r7, #4]
 8000734:	681b      	ldr	r3, [r3, #0]
 8000736:	68d9      	ldr	r1, [r3, #12]
 8000738:	687b      	ldr	r3, [r7, #4]
 800073a:	681b      	ldr	r3, [r3, #0]
 800073c:	68fa      	ldr	r2, [r7, #12]
 800073e:	430a      	orrs	r2, r1
 8000740:	60da      	str	r2, [r3, #12]
  temp = 0;
 8000742:	2300      	movs	r3, #0
 8000744:	60fb      	str	r3, [r7, #12]

  // 4. Configure the optype
  pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000746:	687b      	ldr	r3, [r7, #4]
 8000748:	681b      	ldr	r3, [r3, #0]
 800074a:	685a      	ldr	r2, [r3, #4]
 800074c:	687b      	ldr	r3, [r7, #4]
 800074e:	791b      	ldrb	r3, [r3, #4]
 8000750:	4619      	mov	r1, r3
 8000752:	2301      	movs	r3, #1
 8000754:	408b      	lsls	r3, r1
 8000756:	43db      	mvns	r3, r3
 8000758:	4619      	mov	r1, r3
 800075a:	687b      	ldr	r3, [r7, #4]
 800075c:	681b      	ldr	r3, [r3, #0]
 800075e:	400a      	ands	r2, r1
 8000760:	605a      	str	r2, [r3, #4]
  temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 8000762:	687b      	ldr	r3, [r7, #4]
 8000764:	7a1b      	ldrb	r3, [r3, #8]
 8000766:	461a      	mov	r2, r3
 8000768:	687b      	ldr	r3, [r7, #4]
 800076a:	791b      	ldrb	r3, [r3, #4]
 800076c:	fa02 f303 	lsl.w	r3, r2, r3
 8000770:	60fb      	str	r3, [r7, #12]
  pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000772:	687b      	ldr	r3, [r7, #4]
 8000774:	681b      	ldr	r3, [r3, #0]
 8000776:	6859      	ldr	r1, [r3, #4]
 8000778:	687b      	ldr	r3, [r7, #4]
 800077a:	681b      	ldr	r3, [r3, #0]
 800077c:	68fa      	ldr	r2, [r7, #12]
 800077e:	430a      	orrs	r2, r1
 8000780:	605a      	str	r2, [r3, #4]
  temp = 0;
 8000782:	2300      	movs	r3, #0
 8000784:	60fb      	str	r3, [r7, #12]

  // 5. Configure Alt function registers
  if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN) {
 8000786:	687b      	ldr	r3, [r7, #4]
 8000788:	795b      	ldrb	r3, [r3, #5]
 800078a:	2b02      	cmp	r3, #2
 800078c:	d150      	bne.n	8000830 <GPIO_Init+0x1c4>
    if(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber < GPIO_PIN_8) {
 800078e:	687b      	ldr	r3, [r7, #4]
 8000790:	791b      	ldrb	r3, [r3, #4]
 8000792:	2b07      	cmp	r3, #7
 8000794:	d820      	bhi.n	80007d8 <GPIO_Init+0x16c>
      pGPIOHandle->pGPIOx->AFRL &= ~(0xF << (4 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000796:	687b      	ldr	r3, [r7, #4]
 8000798:	681b      	ldr	r3, [r3, #0]
 800079a:	6a1a      	ldr	r2, [r3, #32]
 800079c:	687b      	ldr	r3, [r7, #4]
 800079e:	791b      	ldrb	r3, [r3, #4]
 80007a0:	009b      	lsls	r3, r3, #2
 80007a2:	210f      	movs	r1, #15
 80007a4:	fa01 f303 	lsl.w	r3, r1, r3
 80007a8:	43db      	mvns	r3, r3
 80007aa:	4619      	mov	r1, r3
 80007ac:	687b      	ldr	r3, [r7, #4]
 80007ae:	681b      	ldr	r3, [r3, #0]
 80007b0:	400a      	ands	r2, r1
 80007b2:	621a      	str	r2, [r3, #32]
      temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80007b4:	687b      	ldr	r3, [r7, #4]
 80007b6:	7a5b      	ldrb	r3, [r3, #9]
 80007b8:	461a      	mov	r2, r3
 80007ba:	687b      	ldr	r3, [r7, #4]
 80007bc:	791b      	ldrb	r3, [r3, #4]
 80007be:	009b      	lsls	r3, r3, #2
 80007c0:	fa02 f303 	lsl.w	r3, r2, r3
 80007c4:	60fb      	str	r3, [r7, #12]
      pGPIOHandle->pGPIOx->AFRL |= temp;
 80007c6:	687b      	ldr	r3, [r7, #4]
 80007c8:	681b      	ldr	r3, [r3, #0]
 80007ca:	6a19      	ldr	r1, [r3, #32]
 80007cc:	687b      	ldr	r3, [r7, #4]
 80007ce:	681b      	ldr	r3, [r3, #0]
 80007d0:	68fa      	ldr	r2, [r7, #12]
 80007d2:	430a      	orrs	r2, r1
 80007d4:	621a      	str	r2, [r3, #32]
 80007d6:	e02b      	b.n	8000830 <GPIO_Init+0x1c4>
    }
    else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber <= GPIO_PIN_15) {
 80007d8:	687b      	ldr	r3, [r7, #4]
 80007da:	791b      	ldrb	r3, [r3, #4]
 80007dc:	2b0f      	cmp	r3, #15
 80007de:	d824      	bhi.n	800082a <GPIO_Init+0x1be>
      pGPIOHandle->pGPIOx->AFRH &= ~(0xF << (4 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%8)));
 80007e0:	687b      	ldr	r3, [r7, #4]
 80007e2:	681b      	ldr	r3, [r3, #0]
 80007e4:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80007e6:	687b      	ldr	r3, [r7, #4]
 80007e8:	791b      	ldrb	r3, [r3, #4]
 80007ea:	f003 0307 	and.w	r3, r3, #7
 80007ee:	009b      	lsls	r3, r3, #2
 80007f0:	210f      	movs	r1, #15
 80007f2:	fa01 f303 	lsl.w	r3, r1, r3
 80007f6:	43db      	mvns	r3, r3
 80007f8:	4619      	mov	r1, r3
 80007fa:	687b      	ldr	r3, [r7, #4]
 80007fc:	681b      	ldr	r3, [r3, #0]
 80007fe:	400a      	ands	r2, r1
 8000800:	625a      	str	r2, [r3, #36]	@ 0x24
      temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%8));
 8000802:	687b      	ldr	r3, [r7, #4]
 8000804:	7a5b      	ldrb	r3, [r3, #9]
 8000806:	461a      	mov	r2, r3
 8000808:	687b      	ldr	r3, [r7, #4]
 800080a:	791b      	ldrb	r3, [r3, #4]
 800080c:	f003 0307 	and.w	r3, r3, #7
 8000810:	009b      	lsls	r3, r3, #2
 8000812:	fa02 f303 	lsl.w	r3, r2, r3
 8000816:	60fb      	str	r3, [r7, #12]
      pGPIOHandle->pGPIOx->AFRH |= temp;
 8000818:	687b      	ldr	r3, [r7, #4]
 800081a:	681b      	ldr	r3, [r3, #0]
 800081c:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 800081e:	687b      	ldr	r3, [r7, #4]
 8000820:	681b      	ldr	r3, [r3, #0]
 8000822:	68fa      	ldr	r2, [r7, #12]
 8000824:	430a      	orrs	r2, r1
 8000826:	625a      	str	r2, [r3, #36]	@ 0x24
 8000828:	e002      	b.n	8000830 <GPIO_Init+0x1c4>
    }
    else {
      printf("Unrecognized PinNumber is trying to be used during alternate function register configuration");
 800082a:	4804      	ldr	r0, [pc, #16]	@ (800083c <GPIO_Init+0x1d0>)
 800082c:	f000 f8f6 	bl	8000a1c <iprintf>
    }
  }
  temp = 0;
 8000830:	2300      	movs	r3, #0
 8000832:	60fb      	str	r3, [r7, #12]
}
 8000834:	bf00      	nop
 8000836:	3710      	adds	r7, #16
 8000838:	46bd      	mov	sp, r7
 800083a:	bd80      	pop	{r7, pc}
 800083c:	08001808 	.word	0x08001808

08000840 <GPIO_ReadFromInputPin>:
 *
 * @return            - Current state of the input pin
 *
 * @Note              - none
 */
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber) {
 8000840:	b480      	push	{r7}
 8000842:	b085      	sub	sp, #20
 8000844:	af00      	add	r7, sp, #0
 8000846:	6078      	str	r0, [r7, #4]
 8000848:	460b      	mov	r3, r1
 800084a:	70fb      	strb	r3, [r7, #3]
  uint8_t readVal;
  readVal = (uint8_t)((pGPIOx->IDR >> PinNumber) & 0x00000001);
 800084c:	687b      	ldr	r3, [r7, #4]
 800084e:	691a      	ldr	r2, [r3, #16]
 8000850:	78fb      	ldrb	r3, [r7, #3]
 8000852:	fa22 f303 	lsr.w	r3, r2, r3
 8000856:	b2db      	uxtb	r3, r3
 8000858:	f003 0301 	and.w	r3, r3, #1
 800085c:	73fb      	strb	r3, [r7, #15]
  return readVal;
 800085e:	7bfb      	ldrb	r3, [r7, #15]
}
 8000860:	4618      	mov	r0, r3
 8000862:	3714      	adds	r7, #20
 8000864:	46bd      	mov	sp, r7
 8000866:	f85d 7b04 	ldr.w	r7, [sp], #4
 800086a:	4770      	bx	lr

0800086c <GPIO_ToggleOutputPin>:
 *
 * @return            - None
 *
 * @Note              - none
 */
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber) {
 800086c:	b480      	push	{r7}
 800086e:	b083      	sub	sp, #12
 8000870:	af00      	add	r7, sp, #0
 8000872:	6078      	str	r0, [r7, #4]
 8000874:	460b      	mov	r3, r1
 8000876:	70fb      	strb	r3, [r7, #3]
  pGPIOx->ODR  = pGPIOx->ODR ^ ( 1 << PinNumber );
 8000878:	687b      	ldr	r3, [r7, #4]
 800087a:	695b      	ldr	r3, [r3, #20]
 800087c:	78fa      	ldrb	r2, [r7, #3]
 800087e:	2101      	movs	r1, #1
 8000880:	fa01 f202 	lsl.w	r2, r1, r2
 8000884:	405a      	eors	r2, r3
 8000886:	687b      	ldr	r3, [r7, #4]
 8000888:	615a      	str	r2, [r3, #20]
}
 800088a:	bf00      	nop
 800088c:	370c      	adds	r7, #12
 800088e:	46bd      	mov	sp, r7
 8000890:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000894:	4770      	bx	lr
	...

08000898 <std>:
 8000898:	2300      	movs	r3, #0
 800089a:	b510      	push	{r4, lr}
 800089c:	4604      	mov	r4, r0
 800089e:	e9c0 3300 	strd	r3, r3, [r0]
 80008a2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80008a6:	6083      	str	r3, [r0, #8]
 80008a8:	8181      	strh	r1, [r0, #12]
 80008aa:	6643      	str	r3, [r0, #100]	@ 0x64
 80008ac:	81c2      	strh	r2, [r0, #14]
 80008ae:	6183      	str	r3, [r0, #24]
 80008b0:	4619      	mov	r1, r3
 80008b2:	2208      	movs	r2, #8
 80008b4:	305c      	adds	r0, #92	@ 0x5c
 80008b6:	f000 f906 	bl	8000ac6 <memset>
 80008ba:	4b0d      	ldr	r3, [pc, #52]	@ (80008f0 <std+0x58>)
 80008bc:	6263      	str	r3, [r4, #36]	@ 0x24
 80008be:	4b0d      	ldr	r3, [pc, #52]	@ (80008f4 <std+0x5c>)
 80008c0:	62a3      	str	r3, [r4, #40]	@ 0x28
 80008c2:	4b0d      	ldr	r3, [pc, #52]	@ (80008f8 <std+0x60>)
 80008c4:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80008c6:	4b0d      	ldr	r3, [pc, #52]	@ (80008fc <std+0x64>)
 80008c8:	6323      	str	r3, [r4, #48]	@ 0x30
 80008ca:	4b0d      	ldr	r3, [pc, #52]	@ (8000900 <std+0x68>)
 80008cc:	6224      	str	r4, [r4, #32]
 80008ce:	429c      	cmp	r4, r3
 80008d0:	d006      	beq.n	80008e0 <std+0x48>
 80008d2:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80008d6:	4294      	cmp	r4, r2
 80008d8:	d002      	beq.n	80008e0 <std+0x48>
 80008da:	33d0      	adds	r3, #208	@ 0xd0
 80008dc:	429c      	cmp	r4, r3
 80008de:	d105      	bne.n	80008ec <std+0x54>
 80008e0:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80008e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80008e8:	f000 b960 	b.w	8000bac <__retarget_lock_init_recursive>
 80008ec:	bd10      	pop	{r4, pc}
 80008ee:	bf00      	nop
 80008f0:	08000a41 	.word	0x08000a41
 80008f4:	08000a63 	.word	0x08000a63
 80008f8:	08000a9b 	.word	0x08000a9b
 80008fc:	08000abf 	.word	0x08000abf
 8000900:	20000078 	.word	0x20000078

08000904 <stdio_exit_handler>:
 8000904:	4a02      	ldr	r2, [pc, #8]	@ (8000910 <stdio_exit_handler+0xc>)
 8000906:	4903      	ldr	r1, [pc, #12]	@ (8000914 <stdio_exit_handler+0x10>)
 8000908:	4803      	ldr	r0, [pc, #12]	@ (8000918 <stdio_exit_handler+0x14>)
 800090a:	f000 b869 	b.w	80009e0 <_fwalk_sglue>
 800090e:	bf00      	nop
 8000910:	20000000 	.word	0x20000000
 8000914:	0800144d 	.word	0x0800144d
 8000918:	20000010 	.word	0x20000010

0800091c <cleanup_stdio>:
 800091c:	6841      	ldr	r1, [r0, #4]
 800091e:	4b0c      	ldr	r3, [pc, #48]	@ (8000950 <cleanup_stdio+0x34>)
 8000920:	4299      	cmp	r1, r3
 8000922:	b510      	push	{r4, lr}
 8000924:	4604      	mov	r4, r0
 8000926:	d001      	beq.n	800092c <cleanup_stdio+0x10>
 8000928:	f000 fd90 	bl	800144c <_fflush_r>
 800092c:	68a1      	ldr	r1, [r4, #8]
 800092e:	4b09      	ldr	r3, [pc, #36]	@ (8000954 <cleanup_stdio+0x38>)
 8000930:	4299      	cmp	r1, r3
 8000932:	d002      	beq.n	800093a <cleanup_stdio+0x1e>
 8000934:	4620      	mov	r0, r4
 8000936:	f000 fd89 	bl	800144c <_fflush_r>
 800093a:	68e1      	ldr	r1, [r4, #12]
 800093c:	4b06      	ldr	r3, [pc, #24]	@ (8000958 <cleanup_stdio+0x3c>)
 800093e:	4299      	cmp	r1, r3
 8000940:	d004      	beq.n	800094c <cleanup_stdio+0x30>
 8000942:	4620      	mov	r0, r4
 8000944:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000948:	f000 bd80 	b.w	800144c <_fflush_r>
 800094c:	bd10      	pop	{r4, pc}
 800094e:	bf00      	nop
 8000950:	20000078 	.word	0x20000078
 8000954:	200000e0 	.word	0x200000e0
 8000958:	20000148 	.word	0x20000148

0800095c <global_stdio_init.part.0>:
 800095c:	b510      	push	{r4, lr}
 800095e:	4b0b      	ldr	r3, [pc, #44]	@ (800098c <global_stdio_init.part.0+0x30>)
 8000960:	4c0b      	ldr	r4, [pc, #44]	@ (8000990 <global_stdio_init.part.0+0x34>)
 8000962:	4a0c      	ldr	r2, [pc, #48]	@ (8000994 <global_stdio_init.part.0+0x38>)
 8000964:	601a      	str	r2, [r3, #0]
 8000966:	4620      	mov	r0, r4
 8000968:	2200      	movs	r2, #0
 800096a:	2104      	movs	r1, #4
 800096c:	f7ff ff94 	bl	8000898 <std>
 8000970:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000974:	2201      	movs	r2, #1
 8000976:	2109      	movs	r1, #9
 8000978:	f7ff ff8e 	bl	8000898 <std>
 800097c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000980:	2202      	movs	r2, #2
 8000982:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000986:	2112      	movs	r1, #18
 8000988:	f7ff bf86 	b.w	8000898 <std>
 800098c:	200001b0 	.word	0x200001b0
 8000990:	20000078 	.word	0x20000078
 8000994:	08000905 	.word	0x08000905

08000998 <__sfp_lock_acquire>:
 8000998:	4801      	ldr	r0, [pc, #4]	@ (80009a0 <__sfp_lock_acquire+0x8>)
 800099a:	f000 b908 	b.w	8000bae <__retarget_lock_acquire_recursive>
 800099e:	bf00      	nop
 80009a0:	200001b9 	.word	0x200001b9

080009a4 <__sfp_lock_release>:
 80009a4:	4801      	ldr	r0, [pc, #4]	@ (80009ac <__sfp_lock_release+0x8>)
 80009a6:	f000 b903 	b.w	8000bb0 <__retarget_lock_release_recursive>
 80009aa:	bf00      	nop
 80009ac:	200001b9 	.word	0x200001b9

080009b0 <__sinit>:
 80009b0:	b510      	push	{r4, lr}
 80009b2:	4604      	mov	r4, r0
 80009b4:	f7ff fff0 	bl	8000998 <__sfp_lock_acquire>
 80009b8:	6a23      	ldr	r3, [r4, #32]
 80009ba:	b11b      	cbz	r3, 80009c4 <__sinit+0x14>
 80009bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80009c0:	f7ff bff0 	b.w	80009a4 <__sfp_lock_release>
 80009c4:	4b04      	ldr	r3, [pc, #16]	@ (80009d8 <__sinit+0x28>)
 80009c6:	6223      	str	r3, [r4, #32]
 80009c8:	4b04      	ldr	r3, [pc, #16]	@ (80009dc <__sinit+0x2c>)
 80009ca:	681b      	ldr	r3, [r3, #0]
 80009cc:	2b00      	cmp	r3, #0
 80009ce:	d1f5      	bne.n	80009bc <__sinit+0xc>
 80009d0:	f7ff ffc4 	bl	800095c <global_stdio_init.part.0>
 80009d4:	e7f2      	b.n	80009bc <__sinit+0xc>
 80009d6:	bf00      	nop
 80009d8:	0800091d 	.word	0x0800091d
 80009dc:	200001b0 	.word	0x200001b0

080009e0 <_fwalk_sglue>:
 80009e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80009e4:	4607      	mov	r7, r0
 80009e6:	4688      	mov	r8, r1
 80009e8:	4614      	mov	r4, r2
 80009ea:	2600      	movs	r6, #0
 80009ec:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80009f0:	f1b9 0901 	subs.w	r9, r9, #1
 80009f4:	d505      	bpl.n	8000a02 <_fwalk_sglue+0x22>
 80009f6:	6824      	ldr	r4, [r4, #0]
 80009f8:	2c00      	cmp	r4, #0
 80009fa:	d1f7      	bne.n	80009ec <_fwalk_sglue+0xc>
 80009fc:	4630      	mov	r0, r6
 80009fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000a02:	89ab      	ldrh	r3, [r5, #12]
 8000a04:	2b01      	cmp	r3, #1
 8000a06:	d907      	bls.n	8000a18 <_fwalk_sglue+0x38>
 8000a08:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000a0c:	3301      	adds	r3, #1
 8000a0e:	d003      	beq.n	8000a18 <_fwalk_sglue+0x38>
 8000a10:	4629      	mov	r1, r5
 8000a12:	4638      	mov	r0, r7
 8000a14:	47c0      	blx	r8
 8000a16:	4306      	orrs	r6, r0
 8000a18:	3568      	adds	r5, #104	@ 0x68
 8000a1a:	e7e9      	b.n	80009f0 <_fwalk_sglue+0x10>

08000a1c <iprintf>:
 8000a1c:	b40f      	push	{r0, r1, r2, r3}
 8000a1e:	b507      	push	{r0, r1, r2, lr}
 8000a20:	4906      	ldr	r1, [pc, #24]	@ (8000a3c <iprintf+0x20>)
 8000a22:	ab04      	add	r3, sp, #16
 8000a24:	6808      	ldr	r0, [r1, #0]
 8000a26:	f853 2b04 	ldr.w	r2, [r3], #4
 8000a2a:	6881      	ldr	r1, [r0, #8]
 8000a2c:	9301      	str	r3, [sp, #4]
 8000a2e:	f000 f9e3 	bl	8000df8 <_vfiprintf_r>
 8000a32:	b003      	add	sp, #12
 8000a34:	f85d eb04 	ldr.w	lr, [sp], #4
 8000a38:	b004      	add	sp, #16
 8000a3a:	4770      	bx	lr
 8000a3c:	2000000c 	.word	0x2000000c

08000a40 <__sread>:
 8000a40:	b510      	push	{r4, lr}
 8000a42:	460c      	mov	r4, r1
 8000a44:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000a48:	f000 f868 	bl	8000b1c <_read_r>
 8000a4c:	2800      	cmp	r0, #0
 8000a4e:	bfab      	itete	ge
 8000a50:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8000a52:	89a3      	ldrhlt	r3, [r4, #12]
 8000a54:	181b      	addge	r3, r3, r0
 8000a56:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8000a5a:	bfac      	ite	ge
 8000a5c:	6563      	strge	r3, [r4, #84]	@ 0x54
 8000a5e:	81a3      	strhlt	r3, [r4, #12]
 8000a60:	bd10      	pop	{r4, pc}

08000a62 <__swrite>:
 8000a62:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000a66:	461f      	mov	r7, r3
 8000a68:	898b      	ldrh	r3, [r1, #12]
 8000a6a:	05db      	lsls	r3, r3, #23
 8000a6c:	4605      	mov	r5, r0
 8000a6e:	460c      	mov	r4, r1
 8000a70:	4616      	mov	r6, r2
 8000a72:	d505      	bpl.n	8000a80 <__swrite+0x1e>
 8000a74:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000a78:	2302      	movs	r3, #2
 8000a7a:	2200      	movs	r2, #0
 8000a7c:	f000 f83c 	bl	8000af8 <_lseek_r>
 8000a80:	89a3      	ldrh	r3, [r4, #12]
 8000a82:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000a86:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000a8a:	81a3      	strh	r3, [r4, #12]
 8000a8c:	4632      	mov	r2, r6
 8000a8e:	463b      	mov	r3, r7
 8000a90:	4628      	mov	r0, r5
 8000a92:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000a96:	f000 b853 	b.w	8000b40 <_write_r>

08000a9a <__sseek>:
 8000a9a:	b510      	push	{r4, lr}
 8000a9c:	460c      	mov	r4, r1
 8000a9e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000aa2:	f000 f829 	bl	8000af8 <_lseek_r>
 8000aa6:	1c43      	adds	r3, r0, #1
 8000aa8:	89a3      	ldrh	r3, [r4, #12]
 8000aaa:	bf15      	itete	ne
 8000aac:	6560      	strne	r0, [r4, #84]	@ 0x54
 8000aae:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8000ab2:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8000ab6:	81a3      	strheq	r3, [r4, #12]
 8000ab8:	bf18      	it	ne
 8000aba:	81a3      	strhne	r3, [r4, #12]
 8000abc:	bd10      	pop	{r4, pc}

08000abe <__sclose>:
 8000abe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ac2:	f000 b809 	b.w	8000ad8 <_close_r>

08000ac6 <memset>:
 8000ac6:	4402      	add	r2, r0
 8000ac8:	4603      	mov	r3, r0
 8000aca:	4293      	cmp	r3, r2
 8000acc:	d100      	bne.n	8000ad0 <memset+0xa>
 8000ace:	4770      	bx	lr
 8000ad0:	f803 1b01 	strb.w	r1, [r3], #1
 8000ad4:	e7f9      	b.n	8000aca <memset+0x4>
	...

08000ad8 <_close_r>:
 8000ad8:	b538      	push	{r3, r4, r5, lr}
 8000ada:	4d06      	ldr	r5, [pc, #24]	@ (8000af4 <_close_r+0x1c>)
 8000adc:	2300      	movs	r3, #0
 8000ade:	4604      	mov	r4, r0
 8000ae0:	4608      	mov	r0, r1
 8000ae2:	602b      	str	r3, [r5, #0]
 8000ae4:	f000 fe02 	bl	80016ec <_close>
 8000ae8:	1c43      	adds	r3, r0, #1
 8000aea:	d102      	bne.n	8000af2 <_close_r+0x1a>
 8000aec:	682b      	ldr	r3, [r5, #0]
 8000aee:	b103      	cbz	r3, 8000af2 <_close_r+0x1a>
 8000af0:	6023      	str	r3, [r4, #0]
 8000af2:	bd38      	pop	{r3, r4, r5, pc}
 8000af4:	200001b4 	.word	0x200001b4

08000af8 <_lseek_r>:
 8000af8:	b538      	push	{r3, r4, r5, lr}
 8000afa:	4d07      	ldr	r5, [pc, #28]	@ (8000b18 <_lseek_r+0x20>)
 8000afc:	4604      	mov	r4, r0
 8000afe:	4608      	mov	r0, r1
 8000b00:	4611      	mov	r1, r2
 8000b02:	2200      	movs	r2, #0
 8000b04:	602a      	str	r2, [r5, #0]
 8000b06:	461a      	mov	r2, r3
 8000b08:	f000 fe08 	bl	800171c <_lseek>
 8000b0c:	1c43      	adds	r3, r0, #1
 8000b0e:	d102      	bne.n	8000b16 <_lseek_r+0x1e>
 8000b10:	682b      	ldr	r3, [r5, #0]
 8000b12:	b103      	cbz	r3, 8000b16 <_lseek_r+0x1e>
 8000b14:	6023      	str	r3, [r4, #0]
 8000b16:	bd38      	pop	{r3, r4, r5, pc}
 8000b18:	200001b4 	.word	0x200001b4

08000b1c <_read_r>:
 8000b1c:	b538      	push	{r3, r4, r5, lr}
 8000b1e:	4d07      	ldr	r5, [pc, #28]	@ (8000b3c <_read_r+0x20>)
 8000b20:	4604      	mov	r4, r0
 8000b22:	4608      	mov	r0, r1
 8000b24:	4611      	mov	r1, r2
 8000b26:	2200      	movs	r2, #0
 8000b28:	602a      	str	r2, [r5, #0]
 8000b2a:	461a      	mov	r2, r3
 8000b2c:	f000 fdfe 	bl	800172c <_read>
 8000b30:	1c43      	adds	r3, r0, #1
 8000b32:	d102      	bne.n	8000b3a <_read_r+0x1e>
 8000b34:	682b      	ldr	r3, [r5, #0]
 8000b36:	b103      	cbz	r3, 8000b3a <_read_r+0x1e>
 8000b38:	6023      	str	r3, [r4, #0]
 8000b3a:	bd38      	pop	{r3, r4, r5, pc}
 8000b3c:	200001b4 	.word	0x200001b4

08000b40 <_write_r>:
 8000b40:	b538      	push	{r3, r4, r5, lr}
 8000b42:	4d07      	ldr	r5, [pc, #28]	@ (8000b60 <_write_r+0x20>)
 8000b44:	4604      	mov	r4, r0
 8000b46:	4608      	mov	r0, r1
 8000b48:	4611      	mov	r1, r2
 8000b4a:	2200      	movs	r2, #0
 8000b4c:	602a      	str	r2, [r5, #0]
 8000b4e:	461a      	mov	r2, r3
 8000b50:	f000 fe02 	bl	8001758 <_write>
 8000b54:	1c43      	adds	r3, r0, #1
 8000b56:	d102      	bne.n	8000b5e <_write_r+0x1e>
 8000b58:	682b      	ldr	r3, [r5, #0]
 8000b5a:	b103      	cbz	r3, 8000b5e <_write_r+0x1e>
 8000b5c:	6023      	str	r3, [r4, #0]
 8000b5e:	bd38      	pop	{r3, r4, r5, pc}
 8000b60:	200001b4 	.word	0x200001b4

08000b64 <__libc_init_array>:
 8000b64:	b570      	push	{r4, r5, r6, lr}
 8000b66:	4d0d      	ldr	r5, [pc, #52]	@ (8000b9c <__libc_init_array+0x38>)
 8000b68:	4c0d      	ldr	r4, [pc, #52]	@ (8000ba0 <__libc_init_array+0x3c>)
 8000b6a:	1b64      	subs	r4, r4, r5
 8000b6c:	10a4      	asrs	r4, r4, #2
 8000b6e:	2600      	movs	r6, #0
 8000b70:	42a6      	cmp	r6, r4
 8000b72:	d109      	bne.n	8000b88 <__libc_init_array+0x24>
 8000b74:	4d0b      	ldr	r5, [pc, #44]	@ (8000ba4 <__libc_init_array+0x40>)
 8000b76:	4c0c      	ldr	r4, [pc, #48]	@ (8000ba8 <__libc_init_array+0x44>)
 8000b78:	f000 fdf6 	bl	8001768 <_init>
 8000b7c:	1b64      	subs	r4, r4, r5
 8000b7e:	10a4      	asrs	r4, r4, #2
 8000b80:	2600      	movs	r6, #0
 8000b82:	42a6      	cmp	r6, r4
 8000b84:	d105      	bne.n	8000b92 <__libc_init_array+0x2e>
 8000b86:	bd70      	pop	{r4, r5, r6, pc}
 8000b88:	f855 3b04 	ldr.w	r3, [r5], #4
 8000b8c:	4798      	blx	r3
 8000b8e:	3601      	adds	r6, #1
 8000b90:	e7ee      	b.n	8000b70 <__libc_init_array+0xc>
 8000b92:	f855 3b04 	ldr.w	r3, [r5], #4
 8000b96:	4798      	blx	r3
 8000b98:	3601      	adds	r6, #1
 8000b9a:	e7f2      	b.n	8000b82 <__libc_init_array+0x1e>
 8000b9c:	080018dc 	.word	0x080018dc
 8000ba0:	080018dc 	.word	0x080018dc
 8000ba4:	080018dc 	.word	0x080018dc
 8000ba8:	080018e0 	.word	0x080018e0

08000bac <__retarget_lock_init_recursive>:
 8000bac:	4770      	bx	lr

08000bae <__retarget_lock_acquire_recursive>:
 8000bae:	4770      	bx	lr

08000bb0 <__retarget_lock_release_recursive>:
 8000bb0:	4770      	bx	lr
	...

08000bb4 <_free_r>:
 8000bb4:	b538      	push	{r3, r4, r5, lr}
 8000bb6:	4605      	mov	r5, r0
 8000bb8:	2900      	cmp	r1, #0
 8000bba:	d041      	beq.n	8000c40 <_free_r+0x8c>
 8000bbc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000bc0:	1f0c      	subs	r4, r1, #4
 8000bc2:	2b00      	cmp	r3, #0
 8000bc4:	bfb8      	it	lt
 8000bc6:	18e4      	addlt	r4, r4, r3
 8000bc8:	f000 f8e0 	bl	8000d8c <__malloc_lock>
 8000bcc:	4a1d      	ldr	r2, [pc, #116]	@ (8000c44 <_free_r+0x90>)
 8000bce:	6813      	ldr	r3, [r2, #0]
 8000bd0:	b933      	cbnz	r3, 8000be0 <_free_r+0x2c>
 8000bd2:	6063      	str	r3, [r4, #4]
 8000bd4:	6014      	str	r4, [r2, #0]
 8000bd6:	4628      	mov	r0, r5
 8000bd8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000bdc:	f000 b8dc 	b.w	8000d98 <__malloc_unlock>
 8000be0:	42a3      	cmp	r3, r4
 8000be2:	d908      	bls.n	8000bf6 <_free_r+0x42>
 8000be4:	6820      	ldr	r0, [r4, #0]
 8000be6:	1821      	adds	r1, r4, r0
 8000be8:	428b      	cmp	r3, r1
 8000bea:	bf01      	itttt	eq
 8000bec:	6819      	ldreq	r1, [r3, #0]
 8000bee:	685b      	ldreq	r3, [r3, #4]
 8000bf0:	1809      	addeq	r1, r1, r0
 8000bf2:	6021      	streq	r1, [r4, #0]
 8000bf4:	e7ed      	b.n	8000bd2 <_free_r+0x1e>
 8000bf6:	461a      	mov	r2, r3
 8000bf8:	685b      	ldr	r3, [r3, #4]
 8000bfa:	b10b      	cbz	r3, 8000c00 <_free_r+0x4c>
 8000bfc:	42a3      	cmp	r3, r4
 8000bfe:	d9fa      	bls.n	8000bf6 <_free_r+0x42>
 8000c00:	6811      	ldr	r1, [r2, #0]
 8000c02:	1850      	adds	r0, r2, r1
 8000c04:	42a0      	cmp	r0, r4
 8000c06:	d10b      	bne.n	8000c20 <_free_r+0x6c>
 8000c08:	6820      	ldr	r0, [r4, #0]
 8000c0a:	4401      	add	r1, r0
 8000c0c:	1850      	adds	r0, r2, r1
 8000c0e:	4283      	cmp	r3, r0
 8000c10:	6011      	str	r1, [r2, #0]
 8000c12:	d1e0      	bne.n	8000bd6 <_free_r+0x22>
 8000c14:	6818      	ldr	r0, [r3, #0]
 8000c16:	685b      	ldr	r3, [r3, #4]
 8000c18:	6053      	str	r3, [r2, #4]
 8000c1a:	4408      	add	r0, r1
 8000c1c:	6010      	str	r0, [r2, #0]
 8000c1e:	e7da      	b.n	8000bd6 <_free_r+0x22>
 8000c20:	d902      	bls.n	8000c28 <_free_r+0x74>
 8000c22:	230c      	movs	r3, #12
 8000c24:	602b      	str	r3, [r5, #0]
 8000c26:	e7d6      	b.n	8000bd6 <_free_r+0x22>
 8000c28:	6820      	ldr	r0, [r4, #0]
 8000c2a:	1821      	adds	r1, r4, r0
 8000c2c:	428b      	cmp	r3, r1
 8000c2e:	bf04      	itt	eq
 8000c30:	6819      	ldreq	r1, [r3, #0]
 8000c32:	685b      	ldreq	r3, [r3, #4]
 8000c34:	6063      	str	r3, [r4, #4]
 8000c36:	bf04      	itt	eq
 8000c38:	1809      	addeq	r1, r1, r0
 8000c3a:	6021      	streq	r1, [r4, #0]
 8000c3c:	6054      	str	r4, [r2, #4]
 8000c3e:	e7ca      	b.n	8000bd6 <_free_r+0x22>
 8000c40:	bd38      	pop	{r3, r4, r5, pc}
 8000c42:	bf00      	nop
 8000c44:	200001c0 	.word	0x200001c0

08000c48 <sbrk_aligned>:
 8000c48:	b570      	push	{r4, r5, r6, lr}
 8000c4a:	4e0f      	ldr	r6, [pc, #60]	@ (8000c88 <sbrk_aligned+0x40>)
 8000c4c:	460c      	mov	r4, r1
 8000c4e:	6831      	ldr	r1, [r6, #0]
 8000c50:	4605      	mov	r5, r0
 8000c52:	b911      	cbnz	r1, 8000c5a <sbrk_aligned+0x12>
 8000c54:	f000 fcb6 	bl	80015c4 <_sbrk_r>
 8000c58:	6030      	str	r0, [r6, #0]
 8000c5a:	4621      	mov	r1, r4
 8000c5c:	4628      	mov	r0, r5
 8000c5e:	f000 fcb1 	bl	80015c4 <_sbrk_r>
 8000c62:	1c43      	adds	r3, r0, #1
 8000c64:	d103      	bne.n	8000c6e <sbrk_aligned+0x26>
 8000c66:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 8000c6a:	4620      	mov	r0, r4
 8000c6c:	bd70      	pop	{r4, r5, r6, pc}
 8000c6e:	1cc4      	adds	r4, r0, #3
 8000c70:	f024 0403 	bic.w	r4, r4, #3
 8000c74:	42a0      	cmp	r0, r4
 8000c76:	d0f8      	beq.n	8000c6a <sbrk_aligned+0x22>
 8000c78:	1a21      	subs	r1, r4, r0
 8000c7a:	4628      	mov	r0, r5
 8000c7c:	f000 fca2 	bl	80015c4 <_sbrk_r>
 8000c80:	3001      	adds	r0, #1
 8000c82:	d1f2      	bne.n	8000c6a <sbrk_aligned+0x22>
 8000c84:	e7ef      	b.n	8000c66 <sbrk_aligned+0x1e>
 8000c86:	bf00      	nop
 8000c88:	200001bc 	.word	0x200001bc

08000c8c <_malloc_r>:
 8000c8c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000c90:	1ccd      	adds	r5, r1, #3
 8000c92:	f025 0503 	bic.w	r5, r5, #3
 8000c96:	3508      	adds	r5, #8
 8000c98:	2d0c      	cmp	r5, #12
 8000c9a:	bf38      	it	cc
 8000c9c:	250c      	movcc	r5, #12
 8000c9e:	2d00      	cmp	r5, #0
 8000ca0:	4606      	mov	r6, r0
 8000ca2:	db01      	blt.n	8000ca8 <_malloc_r+0x1c>
 8000ca4:	42a9      	cmp	r1, r5
 8000ca6:	d904      	bls.n	8000cb2 <_malloc_r+0x26>
 8000ca8:	230c      	movs	r3, #12
 8000caa:	6033      	str	r3, [r6, #0]
 8000cac:	2000      	movs	r0, #0
 8000cae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000cb2:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000d88 <_malloc_r+0xfc>
 8000cb6:	f000 f869 	bl	8000d8c <__malloc_lock>
 8000cba:	f8d8 3000 	ldr.w	r3, [r8]
 8000cbe:	461c      	mov	r4, r3
 8000cc0:	bb44      	cbnz	r4, 8000d14 <_malloc_r+0x88>
 8000cc2:	4629      	mov	r1, r5
 8000cc4:	4630      	mov	r0, r6
 8000cc6:	f7ff ffbf 	bl	8000c48 <sbrk_aligned>
 8000cca:	1c43      	adds	r3, r0, #1
 8000ccc:	4604      	mov	r4, r0
 8000cce:	d158      	bne.n	8000d82 <_malloc_r+0xf6>
 8000cd0:	f8d8 4000 	ldr.w	r4, [r8]
 8000cd4:	4627      	mov	r7, r4
 8000cd6:	2f00      	cmp	r7, #0
 8000cd8:	d143      	bne.n	8000d62 <_malloc_r+0xd6>
 8000cda:	2c00      	cmp	r4, #0
 8000cdc:	d04b      	beq.n	8000d76 <_malloc_r+0xea>
 8000cde:	6823      	ldr	r3, [r4, #0]
 8000ce0:	4639      	mov	r1, r7
 8000ce2:	4630      	mov	r0, r6
 8000ce4:	eb04 0903 	add.w	r9, r4, r3
 8000ce8:	f000 fc6c 	bl	80015c4 <_sbrk_r>
 8000cec:	4581      	cmp	r9, r0
 8000cee:	d142      	bne.n	8000d76 <_malloc_r+0xea>
 8000cf0:	6821      	ldr	r1, [r4, #0]
 8000cf2:	1a6d      	subs	r5, r5, r1
 8000cf4:	4629      	mov	r1, r5
 8000cf6:	4630      	mov	r0, r6
 8000cf8:	f7ff ffa6 	bl	8000c48 <sbrk_aligned>
 8000cfc:	3001      	adds	r0, #1
 8000cfe:	d03a      	beq.n	8000d76 <_malloc_r+0xea>
 8000d00:	6823      	ldr	r3, [r4, #0]
 8000d02:	442b      	add	r3, r5
 8000d04:	6023      	str	r3, [r4, #0]
 8000d06:	f8d8 3000 	ldr.w	r3, [r8]
 8000d0a:	685a      	ldr	r2, [r3, #4]
 8000d0c:	bb62      	cbnz	r2, 8000d68 <_malloc_r+0xdc>
 8000d0e:	f8c8 7000 	str.w	r7, [r8]
 8000d12:	e00f      	b.n	8000d34 <_malloc_r+0xa8>
 8000d14:	6822      	ldr	r2, [r4, #0]
 8000d16:	1b52      	subs	r2, r2, r5
 8000d18:	d420      	bmi.n	8000d5c <_malloc_r+0xd0>
 8000d1a:	2a0b      	cmp	r2, #11
 8000d1c:	d917      	bls.n	8000d4e <_malloc_r+0xc2>
 8000d1e:	1961      	adds	r1, r4, r5
 8000d20:	42a3      	cmp	r3, r4
 8000d22:	6025      	str	r5, [r4, #0]
 8000d24:	bf18      	it	ne
 8000d26:	6059      	strne	r1, [r3, #4]
 8000d28:	6863      	ldr	r3, [r4, #4]
 8000d2a:	bf08      	it	eq
 8000d2c:	f8c8 1000 	streq.w	r1, [r8]
 8000d30:	5162      	str	r2, [r4, r5]
 8000d32:	604b      	str	r3, [r1, #4]
 8000d34:	4630      	mov	r0, r6
 8000d36:	f000 f82f 	bl	8000d98 <__malloc_unlock>
 8000d3a:	f104 000b 	add.w	r0, r4, #11
 8000d3e:	1d23      	adds	r3, r4, #4
 8000d40:	f020 0007 	bic.w	r0, r0, #7
 8000d44:	1ac2      	subs	r2, r0, r3
 8000d46:	bf1c      	itt	ne
 8000d48:	1a1b      	subne	r3, r3, r0
 8000d4a:	50a3      	strne	r3, [r4, r2]
 8000d4c:	e7af      	b.n	8000cae <_malloc_r+0x22>
 8000d4e:	6862      	ldr	r2, [r4, #4]
 8000d50:	42a3      	cmp	r3, r4
 8000d52:	bf0c      	ite	eq
 8000d54:	f8c8 2000 	streq.w	r2, [r8]
 8000d58:	605a      	strne	r2, [r3, #4]
 8000d5a:	e7eb      	b.n	8000d34 <_malloc_r+0xa8>
 8000d5c:	4623      	mov	r3, r4
 8000d5e:	6864      	ldr	r4, [r4, #4]
 8000d60:	e7ae      	b.n	8000cc0 <_malloc_r+0x34>
 8000d62:	463c      	mov	r4, r7
 8000d64:	687f      	ldr	r7, [r7, #4]
 8000d66:	e7b6      	b.n	8000cd6 <_malloc_r+0x4a>
 8000d68:	461a      	mov	r2, r3
 8000d6a:	685b      	ldr	r3, [r3, #4]
 8000d6c:	42a3      	cmp	r3, r4
 8000d6e:	d1fb      	bne.n	8000d68 <_malloc_r+0xdc>
 8000d70:	2300      	movs	r3, #0
 8000d72:	6053      	str	r3, [r2, #4]
 8000d74:	e7de      	b.n	8000d34 <_malloc_r+0xa8>
 8000d76:	230c      	movs	r3, #12
 8000d78:	6033      	str	r3, [r6, #0]
 8000d7a:	4630      	mov	r0, r6
 8000d7c:	f000 f80c 	bl	8000d98 <__malloc_unlock>
 8000d80:	e794      	b.n	8000cac <_malloc_r+0x20>
 8000d82:	6005      	str	r5, [r0, #0]
 8000d84:	e7d6      	b.n	8000d34 <_malloc_r+0xa8>
 8000d86:	bf00      	nop
 8000d88:	200001c0 	.word	0x200001c0

08000d8c <__malloc_lock>:
 8000d8c:	4801      	ldr	r0, [pc, #4]	@ (8000d94 <__malloc_lock+0x8>)
 8000d8e:	f7ff bf0e 	b.w	8000bae <__retarget_lock_acquire_recursive>
 8000d92:	bf00      	nop
 8000d94:	200001b8 	.word	0x200001b8

08000d98 <__malloc_unlock>:
 8000d98:	4801      	ldr	r0, [pc, #4]	@ (8000da0 <__malloc_unlock+0x8>)
 8000d9a:	f7ff bf09 	b.w	8000bb0 <__retarget_lock_release_recursive>
 8000d9e:	bf00      	nop
 8000da0:	200001b8 	.word	0x200001b8

08000da4 <__sfputc_r>:
 8000da4:	6893      	ldr	r3, [r2, #8]
 8000da6:	3b01      	subs	r3, #1
 8000da8:	2b00      	cmp	r3, #0
 8000daa:	b410      	push	{r4}
 8000dac:	6093      	str	r3, [r2, #8]
 8000dae:	da08      	bge.n	8000dc2 <__sfputc_r+0x1e>
 8000db0:	6994      	ldr	r4, [r2, #24]
 8000db2:	42a3      	cmp	r3, r4
 8000db4:	db01      	blt.n	8000dba <__sfputc_r+0x16>
 8000db6:	290a      	cmp	r1, #10
 8000db8:	d103      	bne.n	8000dc2 <__sfputc_r+0x1e>
 8000dba:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000dbe:	f000 bb6d 	b.w	800149c <__swbuf_r>
 8000dc2:	6813      	ldr	r3, [r2, #0]
 8000dc4:	1c58      	adds	r0, r3, #1
 8000dc6:	6010      	str	r0, [r2, #0]
 8000dc8:	7019      	strb	r1, [r3, #0]
 8000dca:	4608      	mov	r0, r1
 8000dcc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000dd0:	4770      	bx	lr

08000dd2 <__sfputs_r>:
 8000dd2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000dd4:	4606      	mov	r6, r0
 8000dd6:	460f      	mov	r7, r1
 8000dd8:	4614      	mov	r4, r2
 8000dda:	18d5      	adds	r5, r2, r3
 8000ddc:	42ac      	cmp	r4, r5
 8000dde:	d101      	bne.n	8000de4 <__sfputs_r+0x12>
 8000de0:	2000      	movs	r0, #0
 8000de2:	e007      	b.n	8000df4 <__sfputs_r+0x22>
 8000de4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000de8:	463a      	mov	r2, r7
 8000dea:	4630      	mov	r0, r6
 8000dec:	f7ff ffda 	bl	8000da4 <__sfputc_r>
 8000df0:	1c43      	adds	r3, r0, #1
 8000df2:	d1f3      	bne.n	8000ddc <__sfputs_r+0xa>
 8000df4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000df8 <_vfiprintf_r>:
 8000df8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000dfc:	460d      	mov	r5, r1
 8000dfe:	b09d      	sub	sp, #116	@ 0x74
 8000e00:	4614      	mov	r4, r2
 8000e02:	4698      	mov	r8, r3
 8000e04:	4606      	mov	r6, r0
 8000e06:	b118      	cbz	r0, 8000e10 <_vfiprintf_r+0x18>
 8000e08:	6a03      	ldr	r3, [r0, #32]
 8000e0a:	b90b      	cbnz	r3, 8000e10 <_vfiprintf_r+0x18>
 8000e0c:	f7ff fdd0 	bl	80009b0 <__sinit>
 8000e10:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000e12:	07d9      	lsls	r1, r3, #31
 8000e14:	d405      	bmi.n	8000e22 <_vfiprintf_r+0x2a>
 8000e16:	89ab      	ldrh	r3, [r5, #12]
 8000e18:	059a      	lsls	r2, r3, #22
 8000e1a:	d402      	bmi.n	8000e22 <_vfiprintf_r+0x2a>
 8000e1c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000e1e:	f7ff fec6 	bl	8000bae <__retarget_lock_acquire_recursive>
 8000e22:	89ab      	ldrh	r3, [r5, #12]
 8000e24:	071b      	lsls	r3, r3, #28
 8000e26:	d501      	bpl.n	8000e2c <_vfiprintf_r+0x34>
 8000e28:	692b      	ldr	r3, [r5, #16]
 8000e2a:	b99b      	cbnz	r3, 8000e54 <_vfiprintf_r+0x5c>
 8000e2c:	4629      	mov	r1, r5
 8000e2e:	4630      	mov	r0, r6
 8000e30:	f000 fb72 	bl	8001518 <__swsetup_r>
 8000e34:	b170      	cbz	r0, 8000e54 <_vfiprintf_r+0x5c>
 8000e36:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000e38:	07dc      	lsls	r4, r3, #31
 8000e3a:	d504      	bpl.n	8000e46 <_vfiprintf_r+0x4e>
 8000e3c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000e40:	b01d      	add	sp, #116	@ 0x74
 8000e42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000e46:	89ab      	ldrh	r3, [r5, #12]
 8000e48:	0598      	lsls	r0, r3, #22
 8000e4a:	d4f7      	bmi.n	8000e3c <_vfiprintf_r+0x44>
 8000e4c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000e4e:	f7ff feaf 	bl	8000bb0 <__retarget_lock_release_recursive>
 8000e52:	e7f3      	b.n	8000e3c <_vfiprintf_r+0x44>
 8000e54:	2300      	movs	r3, #0
 8000e56:	9309      	str	r3, [sp, #36]	@ 0x24
 8000e58:	2320      	movs	r3, #32
 8000e5a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000e5e:	f8cd 800c 	str.w	r8, [sp, #12]
 8000e62:	2330      	movs	r3, #48	@ 0x30
 8000e64:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8001014 <_vfiprintf_r+0x21c>
 8000e68:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000e6c:	f04f 0901 	mov.w	r9, #1
 8000e70:	4623      	mov	r3, r4
 8000e72:	469a      	mov	sl, r3
 8000e74:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000e78:	b10a      	cbz	r2, 8000e7e <_vfiprintf_r+0x86>
 8000e7a:	2a25      	cmp	r2, #37	@ 0x25
 8000e7c:	d1f9      	bne.n	8000e72 <_vfiprintf_r+0x7a>
 8000e7e:	ebba 0b04 	subs.w	fp, sl, r4
 8000e82:	d00b      	beq.n	8000e9c <_vfiprintf_r+0xa4>
 8000e84:	465b      	mov	r3, fp
 8000e86:	4622      	mov	r2, r4
 8000e88:	4629      	mov	r1, r5
 8000e8a:	4630      	mov	r0, r6
 8000e8c:	f7ff ffa1 	bl	8000dd2 <__sfputs_r>
 8000e90:	3001      	adds	r0, #1
 8000e92:	f000 80a7 	beq.w	8000fe4 <_vfiprintf_r+0x1ec>
 8000e96:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000e98:	445a      	add	r2, fp
 8000e9a:	9209      	str	r2, [sp, #36]	@ 0x24
 8000e9c:	f89a 3000 	ldrb.w	r3, [sl]
 8000ea0:	2b00      	cmp	r3, #0
 8000ea2:	f000 809f 	beq.w	8000fe4 <_vfiprintf_r+0x1ec>
 8000ea6:	2300      	movs	r3, #0
 8000ea8:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8000eac:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000eb0:	f10a 0a01 	add.w	sl, sl, #1
 8000eb4:	9304      	str	r3, [sp, #16]
 8000eb6:	9307      	str	r3, [sp, #28]
 8000eb8:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000ebc:	931a      	str	r3, [sp, #104]	@ 0x68
 8000ebe:	4654      	mov	r4, sl
 8000ec0:	2205      	movs	r2, #5
 8000ec2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000ec6:	4853      	ldr	r0, [pc, #332]	@ (8001014 <_vfiprintf_r+0x21c>)
 8000ec8:	f7ff f9ba 	bl	8000240 <memchr>
 8000ecc:	9a04      	ldr	r2, [sp, #16]
 8000ece:	b9d8      	cbnz	r0, 8000f08 <_vfiprintf_r+0x110>
 8000ed0:	06d1      	lsls	r1, r2, #27
 8000ed2:	bf44      	itt	mi
 8000ed4:	2320      	movmi	r3, #32
 8000ed6:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000eda:	0713      	lsls	r3, r2, #28
 8000edc:	bf44      	itt	mi
 8000ede:	232b      	movmi	r3, #43	@ 0x2b
 8000ee0:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000ee4:	f89a 3000 	ldrb.w	r3, [sl]
 8000ee8:	2b2a      	cmp	r3, #42	@ 0x2a
 8000eea:	d015      	beq.n	8000f18 <_vfiprintf_r+0x120>
 8000eec:	9a07      	ldr	r2, [sp, #28]
 8000eee:	4654      	mov	r4, sl
 8000ef0:	2000      	movs	r0, #0
 8000ef2:	f04f 0c0a 	mov.w	ip, #10
 8000ef6:	4621      	mov	r1, r4
 8000ef8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000efc:	3b30      	subs	r3, #48	@ 0x30
 8000efe:	2b09      	cmp	r3, #9
 8000f00:	d94b      	bls.n	8000f9a <_vfiprintf_r+0x1a2>
 8000f02:	b1b0      	cbz	r0, 8000f32 <_vfiprintf_r+0x13a>
 8000f04:	9207      	str	r2, [sp, #28]
 8000f06:	e014      	b.n	8000f32 <_vfiprintf_r+0x13a>
 8000f08:	eba0 0308 	sub.w	r3, r0, r8
 8000f0c:	fa09 f303 	lsl.w	r3, r9, r3
 8000f10:	4313      	orrs	r3, r2
 8000f12:	9304      	str	r3, [sp, #16]
 8000f14:	46a2      	mov	sl, r4
 8000f16:	e7d2      	b.n	8000ebe <_vfiprintf_r+0xc6>
 8000f18:	9b03      	ldr	r3, [sp, #12]
 8000f1a:	1d19      	adds	r1, r3, #4
 8000f1c:	681b      	ldr	r3, [r3, #0]
 8000f1e:	9103      	str	r1, [sp, #12]
 8000f20:	2b00      	cmp	r3, #0
 8000f22:	bfbb      	ittet	lt
 8000f24:	425b      	neglt	r3, r3
 8000f26:	f042 0202 	orrlt.w	r2, r2, #2
 8000f2a:	9307      	strge	r3, [sp, #28]
 8000f2c:	9307      	strlt	r3, [sp, #28]
 8000f2e:	bfb8      	it	lt
 8000f30:	9204      	strlt	r2, [sp, #16]
 8000f32:	7823      	ldrb	r3, [r4, #0]
 8000f34:	2b2e      	cmp	r3, #46	@ 0x2e
 8000f36:	d10a      	bne.n	8000f4e <_vfiprintf_r+0x156>
 8000f38:	7863      	ldrb	r3, [r4, #1]
 8000f3a:	2b2a      	cmp	r3, #42	@ 0x2a
 8000f3c:	d132      	bne.n	8000fa4 <_vfiprintf_r+0x1ac>
 8000f3e:	9b03      	ldr	r3, [sp, #12]
 8000f40:	1d1a      	adds	r2, r3, #4
 8000f42:	681b      	ldr	r3, [r3, #0]
 8000f44:	9203      	str	r2, [sp, #12]
 8000f46:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000f4a:	3402      	adds	r4, #2
 8000f4c:	9305      	str	r3, [sp, #20]
 8000f4e:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8001024 <_vfiprintf_r+0x22c>
 8000f52:	7821      	ldrb	r1, [r4, #0]
 8000f54:	2203      	movs	r2, #3
 8000f56:	4650      	mov	r0, sl
 8000f58:	f7ff f972 	bl	8000240 <memchr>
 8000f5c:	b138      	cbz	r0, 8000f6e <_vfiprintf_r+0x176>
 8000f5e:	9b04      	ldr	r3, [sp, #16]
 8000f60:	eba0 000a 	sub.w	r0, r0, sl
 8000f64:	2240      	movs	r2, #64	@ 0x40
 8000f66:	4082      	lsls	r2, r0
 8000f68:	4313      	orrs	r3, r2
 8000f6a:	3401      	adds	r4, #1
 8000f6c:	9304      	str	r3, [sp, #16]
 8000f6e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000f72:	4829      	ldr	r0, [pc, #164]	@ (8001018 <_vfiprintf_r+0x220>)
 8000f74:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000f78:	2206      	movs	r2, #6
 8000f7a:	f7ff f961 	bl	8000240 <memchr>
 8000f7e:	2800      	cmp	r0, #0
 8000f80:	d03f      	beq.n	8001002 <_vfiprintf_r+0x20a>
 8000f82:	4b26      	ldr	r3, [pc, #152]	@ (800101c <_vfiprintf_r+0x224>)
 8000f84:	bb1b      	cbnz	r3, 8000fce <_vfiprintf_r+0x1d6>
 8000f86:	9b03      	ldr	r3, [sp, #12]
 8000f88:	3307      	adds	r3, #7
 8000f8a:	f023 0307 	bic.w	r3, r3, #7
 8000f8e:	3308      	adds	r3, #8
 8000f90:	9303      	str	r3, [sp, #12]
 8000f92:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000f94:	443b      	add	r3, r7
 8000f96:	9309      	str	r3, [sp, #36]	@ 0x24
 8000f98:	e76a      	b.n	8000e70 <_vfiprintf_r+0x78>
 8000f9a:	fb0c 3202 	mla	r2, ip, r2, r3
 8000f9e:	460c      	mov	r4, r1
 8000fa0:	2001      	movs	r0, #1
 8000fa2:	e7a8      	b.n	8000ef6 <_vfiprintf_r+0xfe>
 8000fa4:	2300      	movs	r3, #0
 8000fa6:	3401      	adds	r4, #1
 8000fa8:	9305      	str	r3, [sp, #20]
 8000faa:	4619      	mov	r1, r3
 8000fac:	f04f 0c0a 	mov.w	ip, #10
 8000fb0:	4620      	mov	r0, r4
 8000fb2:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000fb6:	3a30      	subs	r2, #48	@ 0x30
 8000fb8:	2a09      	cmp	r2, #9
 8000fba:	d903      	bls.n	8000fc4 <_vfiprintf_r+0x1cc>
 8000fbc:	2b00      	cmp	r3, #0
 8000fbe:	d0c6      	beq.n	8000f4e <_vfiprintf_r+0x156>
 8000fc0:	9105      	str	r1, [sp, #20]
 8000fc2:	e7c4      	b.n	8000f4e <_vfiprintf_r+0x156>
 8000fc4:	fb0c 2101 	mla	r1, ip, r1, r2
 8000fc8:	4604      	mov	r4, r0
 8000fca:	2301      	movs	r3, #1
 8000fcc:	e7f0      	b.n	8000fb0 <_vfiprintf_r+0x1b8>
 8000fce:	ab03      	add	r3, sp, #12
 8000fd0:	9300      	str	r3, [sp, #0]
 8000fd2:	462a      	mov	r2, r5
 8000fd4:	4b12      	ldr	r3, [pc, #72]	@ (8001020 <_vfiprintf_r+0x228>)
 8000fd6:	a904      	add	r1, sp, #16
 8000fd8:	4630      	mov	r0, r6
 8000fda:	f3af 8000 	nop.w
 8000fde:	4607      	mov	r7, r0
 8000fe0:	1c78      	adds	r0, r7, #1
 8000fe2:	d1d6      	bne.n	8000f92 <_vfiprintf_r+0x19a>
 8000fe4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000fe6:	07d9      	lsls	r1, r3, #31
 8000fe8:	d405      	bmi.n	8000ff6 <_vfiprintf_r+0x1fe>
 8000fea:	89ab      	ldrh	r3, [r5, #12]
 8000fec:	059a      	lsls	r2, r3, #22
 8000fee:	d402      	bmi.n	8000ff6 <_vfiprintf_r+0x1fe>
 8000ff0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000ff2:	f7ff fddd 	bl	8000bb0 <__retarget_lock_release_recursive>
 8000ff6:	89ab      	ldrh	r3, [r5, #12]
 8000ff8:	065b      	lsls	r3, r3, #25
 8000ffa:	f53f af1f 	bmi.w	8000e3c <_vfiprintf_r+0x44>
 8000ffe:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8001000:	e71e      	b.n	8000e40 <_vfiprintf_r+0x48>
 8001002:	ab03      	add	r3, sp, #12
 8001004:	9300      	str	r3, [sp, #0]
 8001006:	462a      	mov	r2, r5
 8001008:	4b05      	ldr	r3, [pc, #20]	@ (8001020 <_vfiprintf_r+0x228>)
 800100a:	a904      	add	r1, sp, #16
 800100c:	4630      	mov	r0, r6
 800100e:	f000 f879 	bl	8001104 <_printf_i>
 8001012:	e7e4      	b.n	8000fde <_vfiprintf_r+0x1e6>
 8001014:	0800189f 	.word	0x0800189f
 8001018:	080018a9 	.word	0x080018a9
 800101c:	00000000 	.word	0x00000000
 8001020:	08000dd3 	.word	0x08000dd3
 8001024:	080018a5 	.word	0x080018a5

08001028 <_printf_common>:
 8001028:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800102c:	4616      	mov	r6, r2
 800102e:	4698      	mov	r8, r3
 8001030:	688a      	ldr	r2, [r1, #8]
 8001032:	690b      	ldr	r3, [r1, #16]
 8001034:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8001038:	4293      	cmp	r3, r2
 800103a:	bfb8      	it	lt
 800103c:	4613      	movlt	r3, r2
 800103e:	6033      	str	r3, [r6, #0]
 8001040:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8001044:	4607      	mov	r7, r0
 8001046:	460c      	mov	r4, r1
 8001048:	b10a      	cbz	r2, 800104e <_printf_common+0x26>
 800104a:	3301      	adds	r3, #1
 800104c:	6033      	str	r3, [r6, #0]
 800104e:	6823      	ldr	r3, [r4, #0]
 8001050:	0699      	lsls	r1, r3, #26
 8001052:	bf42      	ittt	mi
 8001054:	6833      	ldrmi	r3, [r6, #0]
 8001056:	3302      	addmi	r3, #2
 8001058:	6033      	strmi	r3, [r6, #0]
 800105a:	6825      	ldr	r5, [r4, #0]
 800105c:	f015 0506 	ands.w	r5, r5, #6
 8001060:	d106      	bne.n	8001070 <_printf_common+0x48>
 8001062:	f104 0a19 	add.w	sl, r4, #25
 8001066:	68e3      	ldr	r3, [r4, #12]
 8001068:	6832      	ldr	r2, [r6, #0]
 800106a:	1a9b      	subs	r3, r3, r2
 800106c:	42ab      	cmp	r3, r5
 800106e:	dc26      	bgt.n	80010be <_printf_common+0x96>
 8001070:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8001074:	6822      	ldr	r2, [r4, #0]
 8001076:	3b00      	subs	r3, #0
 8001078:	bf18      	it	ne
 800107a:	2301      	movne	r3, #1
 800107c:	0692      	lsls	r2, r2, #26
 800107e:	d42b      	bmi.n	80010d8 <_printf_common+0xb0>
 8001080:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8001084:	4641      	mov	r1, r8
 8001086:	4638      	mov	r0, r7
 8001088:	47c8      	blx	r9
 800108a:	3001      	adds	r0, #1
 800108c:	d01e      	beq.n	80010cc <_printf_common+0xa4>
 800108e:	6823      	ldr	r3, [r4, #0]
 8001090:	6922      	ldr	r2, [r4, #16]
 8001092:	f003 0306 	and.w	r3, r3, #6
 8001096:	2b04      	cmp	r3, #4
 8001098:	bf02      	ittt	eq
 800109a:	68e5      	ldreq	r5, [r4, #12]
 800109c:	6833      	ldreq	r3, [r6, #0]
 800109e:	1aed      	subeq	r5, r5, r3
 80010a0:	68a3      	ldr	r3, [r4, #8]
 80010a2:	bf0c      	ite	eq
 80010a4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80010a8:	2500      	movne	r5, #0
 80010aa:	4293      	cmp	r3, r2
 80010ac:	bfc4      	itt	gt
 80010ae:	1a9b      	subgt	r3, r3, r2
 80010b0:	18ed      	addgt	r5, r5, r3
 80010b2:	2600      	movs	r6, #0
 80010b4:	341a      	adds	r4, #26
 80010b6:	42b5      	cmp	r5, r6
 80010b8:	d11a      	bne.n	80010f0 <_printf_common+0xc8>
 80010ba:	2000      	movs	r0, #0
 80010bc:	e008      	b.n	80010d0 <_printf_common+0xa8>
 80010be:	2301      	movs	r3, #1
 80010c0:	4652      	mov	r2, sl
 80010c2:	4641      	mov	r1, r8
 80010c4:	4638      	mov	r0, r7
 80010c6:	47c8      	blx	r9
 80010c8:	3001      	adds	r0, #1
 80010ca:	d103      	bne.n	80010d4 <_printf_common+0xac>
 80010cc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80010d0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80010d4:	3501      	adds	r5, #1
 80010d6:	e7c6      	b.n	8001066 <_printf_common+0x3e>
 80010d8:	18e1      	adds	r1, r4, r3
 80010da:	1c5a      	adds	r2, r3, #1
 80010dc:	2030      	movs	r0, #48	@ 0x30
 80010de:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80010e2:	4422      	add	r2, r4
 80010e4:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80010e8:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80010ec:	3302      	adds	r3, #2
 80010ee:	e7c7      	b.n	8001080 <_printf_common+0x58>
 80010f0:	2301      	movs	r3, #1
 80010f2:	4622      	mov	r2, r4
 80010f4:	4641      	mov	r1, r8
 80010f6:	4638      	mov	r0, r7
 80010f8:	47c8      	blx	r9
 80010fa:	3001      	adds	r0, #1
 80010fc:	d0e6      	beq.n	80010cc <_printf_common+0xa4>
 80010fe:	3601      	adds	r6, #1
 8001100:	e7d9      	b.n	80010b6 <_printf_common+0x8e>
	...

08001104 <_printf_i>:
 8001104:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001108:	7e0f      	ldrb	r7, [r1, #24]
 800110a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800110c:	2f78      	cmp	r7, #120	@ 0x78
 800110e:	4691      	mov	r9, r2
 8001110:	4680      	mov	r8, r0
 8001112:	460c      	mov	r4, r1
 8001114:	469a      	mov	sl, r3
 8001116:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 800111a:	d807      	bhi.n	800112c <_printf_i+0x28>
 800111c:	2f62      	cmp	r7, #98	@ 0x62
 800111e:	d80a      	bhi.n	8001136 <_printf_i+0x32>
 8001120:	2f00      	cmp	r7, #0
 8001122:	f000 80d2 	beq.w	80012ca <_printf_i+0x1c6>
 8001126:	2f58      	cmp	r7, #88	@ 0x58
 8001128:	f000 80b9 	beq.w	800129e <_printf_i+0x19a>
 800112c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001130:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8001134:	e03a      	b.n	80011ac <_printf_i+0xa8>
 8001136:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 800113a:	2b15      	cmp	r3, #21
 800113c:	d8f6      	bhi.n	800112c <_printf_i+0x28>
 800113e:	a101      	add	r1, pc, #4	@ (adr r1, 8001144 <_printf_i+0x40>)
 8001140:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001144:	0800119d 	.word	0x0800119d
 8001148:	080011b1 	.word	0x080011b1
 800114c:	0800112d 	.word	0x0800112d
 8001150:	0800112d 	.word	0x0800112d
 8001154:	0800112d 	.word	0x0800112d
 8001158:	0800112d 	.word	0x0800112d
 800115c:	080011b1 	.word	0x080011b1
 8001160:	0800112d 	.word	0x0800112d
 8001164:	0800112d 	.word	0x0800112d
 8001168:	0800112d 	.word	0x0800112d
 800116c:	0800112d 	.word	0x0800112d
 8001170:	080012b1 	.word	0x080012b1
 8001174:	080011db 	.word	0x080011db
 8001178:	0800126b 	.word	0x0800126b
 800117c:	0800112d 	.word	0x0800112d
 8001180:	0800112d 	.word	0x0800112d
 8001184:	080012d3 	.word	0x080012d3
 8001188:	0800112d 	.word	0x0800112d
 800118c:	080011db 	.word	0x080011db
 8001190:	0800112d 	.word	0x0800112d
 8001194:	0800112d 	.word	0x0800112d
 8001198:	08001273 	.word	0x08001273
 800119c:	6833      	ldr	r3, [r6, #0]
 800119e:	1d1a      	adds	r2, r3, #4
 80011a0:	681b      	ldr	r3, [r3, #0]
 80011a2:	6032      	str	r2, [r6, #0]
 80011a4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80011a8:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80011ac:	2301      	movs	r3, #1
 80011ae:	e09d      	b.n	80012ec <_printf_i+0x1e8>
 80011b0:	6833      	ldr	r3, [r6, #0]
 80011b2:	6820      	ldr	r0, [r4, #0]
 80011b4:	1d19      	adds	r1, r3, #4
 80011b6:	6031      	str	r1, [r6, #0]
 80011b8:	0606      	lsls	r6, r0, #24
 80011ba:	d501      	bpl.n	80011c0 <_printf_i+0xbc>
 80011bc:	681d      	ldr	r5, [r3, #0]
 80011be:	e003      	b.n	80011c8 <_printf_i+0xc4>
 80011c0:	0645      	lsls	r5, r0, #25
 80011c2:	d5fb      	bpl.n	80011bc <_printf_i+0xb8>
 80011c4:	f9b3 5000 	ldrsh.w	r5, [r3]
 80011c8:	2d00      	cmp	r5, #0
 80011ca:	da03      	bge.n	80011d4 <_printf_i+0xd0>
 80011cc:	232d      	movs	r3, #45	@ 0x2d
 80011ce:	426d      	negs	r5, r5
 80011d0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80011d4:	4859      	ldr	r0, [pc, #356]	@ (800133c <_printf_i+0x238>)
 80011d6:	230a      	movs	r3, #10
 80011d8:	e011      	b.n	80011fe <_printf_i+0xfa>
 80011da:	6821      	ldr	r1, [r4, #0]
 80011dc:	6833      	ldr	r3, [r6, #0]
 80011de:	0608      	lsls	r0, r1, #24
 80011e0:	f853 5b04 	ldr.w	r5, [r3], #4
 80011e4:	d402      	bmi.n	80011ec <_printf_i+0xe8>
 80011e6:	0649      	lsls	r1, r1, #25
 80011e8:	bf48      	it	mi
 80011ea:	b2ad      	uxthmi	r5, r5
 80011ec:	2f6f      	cmp	r7, #111	@ 0x6f
 80011ee:	4853      	ldr	r0, [pc, #332]	@ (800133c <_printf_i+0x238>)
 80011f0:	6033      	str	r3, [r6, #0]
 80011f2:	bf14      	ite	ne
 80011f4:	230a      	movne	r3, #10
 80011f6:	2308      	moveq	r3, #8
 80011f8:	2100      	movs	r1, #0
 80011fa:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80011fe:	6866      	ldr	r6, [r4, #4]
 8001200:	60a6      	str	r6, [r4, #8]
 8001202:	2e00      	cmp	r6, #0
 8001204:	bfa2      	ittt	ge
 8001206:	6821      	ldrge	r1, [r4, #0]
 8001208:	f021 0104 	bicge.w	r1, r1, #4
 800120c:	6021      	strge	r1, [r4, #0]
 800120e:	b90d      	cbnz	r5, 8001214 <_printf_i+0x110>
 8001210:	2e00      	cmp	r6, #0
 8001212:	d04b      	beq.n	80012ac <_printf_i+0x1a8>
 8001214:	4616      	mov	r6, r2
 8001216:	fbb5 f1f3 	udiv	r1, r5, r3
 800121a:	fb03 5711 	mls	r7, r3, r1, r5
 800121e:	5dc7      	ldrb	r7, [r0, r7]
 8001220:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001224:	462f      	mov	r7, r5
 8001226:	42bb      	cmp	r3, r7
 8001228:	460d      	mov	r5, r1
 800122a:	d9f4      	bls.n	8001216 <_printf_i+0x112>
 800122c:	2b08      	cmp	r3, #8
 800122e:	d10b      	bne.n	8001248 <_printf_i+0x144>
 8001230:	6823      	ldr	r3, [r4, #0]
 8001232:	07df      	lsls	r7, r3, #31
 8001234:	d508      	bpl.n	8001248 <_printf_i+0x144>
 8001236:	6923      	ldr	r3, [r4, #16]
 8001238:	6861      	ldr	r1, [r4, #4]
 800123a:	4299      	cmp	r1, r3
 800123c:	bfde      	ittt	le
 800123e:	2330      	movle	r3, #48	@ 0x30
 8001240:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001244:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 8001248:	1b92      	subs	r2, r2, r6
 800124a:	6122      	str	r2, [r4, #16]
 800124c:	f8cd a000 	str.w	sl, [sp]
 8001250:	464b      	mov	r3, r9
 8001252:	aa03      	add	r2, sp, #12
 8001254:	4621      	mov	r1, r4
 8001256:	4640      	mov	r0, r8
 8001258:	f7ff fee6 	bl	8001028 <_printf_common>
 800125c:	3001      	adds	r0, #1
 800125e:	d14a      	bne.n	80012f6 <_printf_i+0x1f2>
 8001260:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001264:	b004      	add	sp, #16
 8001266:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800126a:	6823      	ldr	r3, [r4, #0]
 800126c:	f043 0320 	orr.w	r3, r3, #32
 8001270:	6023      	str	r3, [r4, #0]
 8001272:	4833      	ldr	r0, [pc, #204]	@ (8001340 <_printf_i+0x23c>)
 8001274:	2778      	movs	r7, #120	@ 0x78
 8001276:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800127a:	6823      	ldr	r3, [r4, #0]
 800127c:	6831      	ldr	r1, [r6, #0]
 800127e:	061f      	lsls	r7, r3, #24
 8001280:	f851 5b04 	ldr.w	r5, [r1], #4
 8001284:	d402      	bmi.n	800128c <_printf_i+0x188>
 8001286:	065f      	lsls	r7, r3, #25
 8001288:	bf48      	it	mi
 800128a:	b2ad      	uxthmi	r5, r5
 800128c:	6031      	str	r1, [r6, #0]
 800128e:	07d9      	lsls	r1, r3, #31
 8001290:	bf44      	itt	mi
 8001292:	f043 0320 	orrmi.w	r3, r3, #32
 8001296:	6023      	strmi	r3, [r4, #0]
 8001298:	b11d      	cbz	r5, 80012a2 <_printf_i+0x19e>
 800129a:	2310      	movs	r3, #16
 800129c:	e7ac      	b.n	80011f8 <_printf_i+0xf4>
 800129e:	4827      	ldr	r0, [pc, #156]	@ (800133c <_printf_i+0x238>)
 80012a0:	e7e9      	b.n	8001276 <_printf_i+0x172>
 80012a2:	6823      	ldr	r3, [r4, #0]
 80012a4:	f023 0320 	bic.w	r3, r3, #32
 80012a8:	6023      	str	r3, [r4, #0]
 80012aa:	e7f6      	b.n	800129a <_printf_i+0x196>
 80012ac:	4616      	mov	r6, r2
 80012ae:	e7bd      	b.n	800122c <_printf_i+0x128>
 80012b0:	6833      	ldr	r3, [r6, #0]
 80012b2:	6825      	ldr	r5, [r4, #0]
 80012b4:	6961      	ldr	r1, [r4, #20]
 80012b6:	1d18      	adds	r0, r3, #4
 80012b8:	6030      	str	r0, [r6, #0]
 80012ba:	062e      	lsls	r6, r5, #24
 80012bc:	681b      	ldr	r3, [r3, #0]
 80012be:	d501      	bpl.n	80012c4 <_printf_i+0x1c0>
 80012c0:	6019      	str	r1, [r3, #0]
 80012c2:	e002      	b.n	80012ca <_printf_i+0x1c6>
 80012c4:	0668      	lsls	r0, r5, #25
 80012c6:	d5fb      	bpl.n	80012c0 <_printf_i+0x1bc>
 80012c8:	8019      	strh	r1, [r3, #0]
 80012ca:	2300      	movs	r3, #0
 80012cc:	6123      	str	r3, [r4, #16]
 80012ce:	4616      	mov	r6, r2
 80012d0:	e7bc      	b.n	800124c <_printf_i+0x148>
 80012d2:	6833      	ldr	r3, [r6, #0]
 80012d4:	1d1a      	adds	r2, r3, #4
 80012d6:	6032      	str	r2, [r6, #0]
 80012d8:	681e      	ldr	r6, [r3, #0]
 80012da:	6862      	ldr	r2, [r4, #4]
 80012dc:	2100      	movs	r1, #0
 80012de:	4630      	mov	r0, r6
 80012e0:	f7fe ffae 	bl	8000240 <memchr>
 80012e4:	b108      	cbz	r0, 80012ea <_printf_i+0x1e6>
 80012e6:	1b80      	subs	r0, r0, r6
 80012e8:	6060      	str	r0, [r4, #4]
 80012ea:	6863      	ldr	r3, [r4, #4]
 80012ec:	6123      	str	r3, [r4, #16]
 80012ee:	2300      	movs	r3, #0
 80012f0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80012f4:	e7aa      	b.n	800124c <_printf_i+0x148>
 80012f6:	6923      	ldr	r3, [r4, #16]
 80012f8:	4632      	mov	r2, r6
 80012fa:	4649      	mov	r1, r9
 80012fc:	4640      	mov	r0, r8
 80012fe:	47d0      	blx	sl
 8001300:	3001      	adds	r0, #1
 8001302:	d0ad      	beq.n	8001260 <_printf_i+0x15c>
 8001304:	6823      	ldr	r3, [r4, #0]
 8001306:	079b      	lsls	r3, r3, #30
 8001308:	d413      	bmi.n	8001332 <_printf_i+0x22e>
 800130a:	68e0      	ldr	r0, [r4, #12]
 800130c:	9b03      	ldr	r3, [sp, #12]
 800130e:	4298      	cmp	r0, r3
 8001310:	bfb8      	it	lt
 8001312:	4618      	movlt	r0, r3
 8001314:	e7a6      	b.n	8001264 <_printf_i+0x160>
 8001316:	2301      	movs	r3, #1
 8001318:	4632      	mov	r2, r6
 800131a:	4649      	mov	r1, r9
 800131c:	4640      	mov	r0, r8
 800131e:	47d0      	blx	sl
 8001320:	3001      	adds	r0, #1
 8001322:	d09d      	beq.n	8001260 <_printf_i+0x15c>
 8001324:	3501      	adds	r5, #1
 8001326:	68e3      	ldr	r3, [r4, #12]
 8001328:	9903      	ldr	r1, [sp, #12]
 800132a:	1a5b      	subs	r3, r3, r1
 800132c:	42ab      	cmp	r3, r5
 800132e:	dcf2      	bgt.n	8001316 <_printf_i+0x212>
 8001330:	e7eb      	b.n	800130a <_printf_i+0x206>
 8001332:	2500      	movs	r5, #0
 8001334:	f104 0619 	add.w	r6, r4, #25
 8001338:	e7f5      	b.n	8001326 <_printf_i+0x222>
 800133a:	bf00      	nop
 800133c:	080018b0 	.word	0x080018b0
 8001340:	080018c1 	.word	0x080018c1

08001344 <__sflush_r>:
 8001344:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8001348:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800134c:	0716      	lsls	r6, r2, #28
 800134e:	4605      	mov	r5, r0
 8001350:	460c      	mov	r4, r1
 8001352:	d454      	bmi.n	80013fe <__sflush_r+0xba>
 8001354:	684b      	ldr	r3, [r1, #4]
 8001356:	2b00      	cmp	r3, #0
 8001358:	dc02      	bgt.n	8001360 <__sflush_r+0x1c>
 800135a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800135c:	2b00      	cmp	r3, #0
 800135e:	dd48      	ble.n	80013f2 <__sflush_r+0xae>
 8001360:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001362:	2e00      	cmp	r6, #0
 8001364:	d045      	beq.n	80013f2 <__sflush_r+0xae>
 8001366:	2300      	movs	r3, #0
 8001368:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800136c:	682f      	ldr	r7, [r5, #0]
 800136e:	6a21      	ldr	r1, [r4, #32]
 8001370:	602b      	str	r3, [r5, #0]
 8001372:	d030      	beq.n	80013d6 <__sflush_r+0x92>
 8001374:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8001376:	89a3      	ldrh	r3, [r4, #12]
 8001378:	0759      	lsls	r1, r3, #29
 800137a:	d505      	bpl.n	8001388 <__sflush_r+0x44>
 800137c:	6863      	ldr	r3, [r4, #4]
 800137e:	1ad2      	subs	r2, r2, r3
 8001380:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8001382:	b10b      	cbz	r3, 8001388 <__sflush_r+0x44>
 8001384:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001386:	1ad2      	subs	r2, r2, r3
 8001388:	2300      	movs	r3, #0
 800138a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800138c:	6a21      	ldr	r1, [r4, #32]
 800138e:	4628      	mov	r0, r5
 8001390:	47b0      	blx	r6
 8001392:	1c43      	adds	r3, r0, #1
 8001394:	89a3      	ldrh	r3, [r4, #12]
 8001396:	d106      	bne.n	80013a6 <__sflush_r+0x62>
 8001398:	6829      	ldr	r1, [r5, #0]
 800139a:	291d      	cmp	r1, #29
 800139c:	d82b      	bhi.n	80013f6 <__sflush_r+0xb2>
 800139e:	4a2a      	ldr	r2, [pc, #168]	@ (8001448 <__sflush_r+0x104>)
 80013a0:	410a      	asrs	r2, r1
 80013a2:	07d6      	lsls	r6, r2, #31
 80013a4:	d427      	bmi.n	80013f6 <__sflush_r+0xb2>
 80013a6:	2200      	movs	r2, #0
 80013a8:	6062      	str	r2, [r4, #4]
 80013aa:	04d9      	lsls	r1, r3, #19
 80013ac:	6922      	ldr	r2, [r4, #16]
 80013ae:	6022      	str	r2, [r4, #0]
 80013b0:	d504      	bpl.n	80013bc <__sflush_r+0x78>
 80013b2:	1c42      	adds	r2, r0, #1
 80013b4:	d101      	bne.n	80013ba <__sflush_r+0x76>
 80013b6:	682b      	ldr	r3, [r5, #0]
 80013b8:	b903      	cbnz	r3, 80013bc <__sflush_r+0x78>
 80013ba:	6560      	str	r0, [r4, #84]	@ 0x54
 80013bc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80013be:	602f      	str	r7, [r5, #0]
 80013c0:	b1b9      	cbz	r1, 80013f2 <__sflush_r+0xae>
 80013c2:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80013c6:	4299      	cmp	r1, r3
 80013c8:	d002      	beq.n	80013d0 <__sflush_r+0x8c>
 80013ca:	4628      	mov	r0, r5
 80013cc:	f7ff fbf2 	bl	8000bb4 <_free_r>
 80013d0:	2300      	movs	r3, #0
 80013d2:	6363      	str	r3, [r4, #52]	@ 0x34
 80013d4:	e00d      	b.n	80013f2 <__sflush_r+0xae>
 80013d6:	2301      	movs	r3, #1
 80013d8:	4628      	mov	r0, r5
 80013da:	47b0      	blx	r6
 80013dc:	4602      	mov	r2, r0
 80013de:	1c50      	adds	r0, r2, #1
 80013e0:	d1c9      	bne.n	8001376 <__sflush_r+0x32>
 80013e2:	682b      	ldr	r3, [r5, #0]
 80013e4:	2b00      	cmp	r3, #0
 80013e6:	d0c6      	beq.n	8001376 <__sflush_r+0x32>
 80013e8:	2b1d      	cmp	r3, #29
 80013ea:	d001      	beq.n	80013f0 <__sflush_r+0xac>
 80013ec:	2b16      	cmp	r3, #22
 80013ee:	d11e      	bne.n	800142e <__sflush_r+0xea>
 80013f0:	602f      	str	r7, [r5, #0]
 80013f2:	2000      	movs	r0, #0
 80013f4:	e022      	b.n	800143c <__sflush_r+0xf8>
 80013f6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80013fa:	b21b      	sxth	r3, r3
 80013fc:	e01b      	b.n	8001436 <__sflush_r+0xf2>
 80013fe:	690f      	ldr	r7, [r1, #16]
 8001400:	2f00      	cmp	r7, #0
 8001402:	d0f6      	beq.n	80013f2 <__sflush_r+0xae>
 8001404:	0793      	lsls	r3, r2, #30
 8001406:	680e      	ldr	r6, [r1, #0]
 8001408:	bf08      	it	eq
 800140a:	694b      	ldreq	r3, [r1, #20]
 800140c:	600f      	str	r7, [r1, #0]
 800140e:	bf18      	it	ne
 8001410:	2300      	movne	r3, #0
 8001412:	eba6 0807 	sub.w	r8, r6, r7
 8001416:	608b      	str	r3, [r1, #8]
 8001418:	f1b8 0f00 	cmp.w	r8, #0
 800141c:	dde9      	ble.n	80013f2 <__sflush_r+0xae>
 800141e:	6a21      	ldr	r1, [r4, #32]
 8001420:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8001422:	4643      	mov	r3, r8
 8001424:	463a      	mov	r2, r7
 8001426:	4628      	mov	r0, r5
 8001428:	47b0      	blx	r6
 800142a:	2800      	cmp	r0, #0
 800142c:	dc08      	bgt.n	8001440 <__sflush_r+0xfc>
 800142e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001432:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001436:	81a3      	strh	r3, [r4, #12]
 8001438:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800143c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001440:	4407      	add	r7, r0
 8001442:	eba8 0800 	sub.w	r8, r8, r0
 8001446:	e7e7      	b.n	8001418 <__sflush_r+0xd4>
 8001448:	dfbffffe 	.word	0xdfbffffe

0800144c <_fflush_r>:
 800144c:	b538      	push	{r3, r4, r5, lr}
 800144e:	690b      	ldr	r3, [r1, #16]
 8001450:	4605      	mov	r5, r0
 8001452:	460c      	mov	r4, r1
 8001454:	b913      	cbnz	r3, 800145c <_fflush_r+0x10>
 8001456:	2500      	movs	r5, #0
 8001458:	4628      	mov	r0, r5
 800145a:	bd38      	pop	{r3, r4, r5, pc}
 800145c:	b118      	cbz	r0, 8001466 <_fflush_r+0x1a>
 800145e:	6a03      	ldr	r3, [r0, #32]
 8001460:	b90b      	cbnz	r3, 8001466 <_fflush_r+0x1a>
 8001462:	f7ff faa5 	bl	80009b0 <__sinit>
 8001466:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800146a:	2b00      	cmp	r3, #0
 800146c:	d0f3      	beq.n	8001456 <_fflush_r+0xa>
 800146e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8001470:	07d0      	lsls	r0, r2, #31
 8001472:	d404      	bmi.n	800147e <_fflush_r+0x32>
 8001474:	0599      	lsls	r1, r3, #22
 8001476:	d402      	bmi.n	800147e <_fflush_r+0x32>
 8001478:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800147a:	f7ff fb98 	bl	8000bae <__retarget_lock_acquire_recursive>
 800147e:	4628      	mov	r0, r5
 8001480:	4621      	mov	r1, r4
 8001482:	f7ff ff5f 	bl	8001344 <__sflush_r>
 8001486:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001488:	07da      	lsls	r2, r3, #31
 800148a:	4605      	mov	r5, r0
 800148c:	d4e4      	bmi.n	8001458 <_fflush_r+0xc>
 800148e:	89a3      	ldrh	r3, [r4, #12]
 8001490:	059b      	lsls	r3, r3, #22
 8001492:	d4e1      	bmi.n	8001458 <_fflush_r+0xc>
 8001494:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001496:	f7ff fb8b 	bl	8000bb0 <__retarget_lock_release_recursive>
 800149a:	e7dd      	b.n	8001458 <_fflush_r+0xc>

0800149c <__swbuf_r>:
 800149c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800149e:	460e      	mov	r6, r1
 80014a0:	4614      	mov	r4, r2
 80014a2:	4605      	mov	r5, r0
 80014a4:	b118      	cbz	r0, 80014ae <__swbuf_r+0x12>
 80014a6:	6a03      	ldr	r3, [r0, #32]
 80014a8:	b90b      	cbnz	r3, 80014ae <__swbuf_r+0x12>
 80014aa:	f7ff fa81 	bl	80009b0 <__sinit>
 80014ae:	69a3      	ldr	r3, [r4, #24]
 80014b0:	60a3      	str	r3, [r4, #8]
 80014b2:	89a3      	ldrh	r3, [r4, #12]
 80014b4:	071a      	lsls	r2, r3, #28
 80014b6:	d501      	bpl.n	80014bc <__swbuf_r+0x20>
 80014b8:	6923      	ldr	r3, [r4, #16]
 80014ba:	b943      	cbnz	r3, 80014ce <__swbuf_r+0x32>
 80014bc:	4621      	mov	r1, r4
 80014be:	4628      	mov	r0, r5
 80014c0:	f000 f82a 	bl	8001518 <__swsetup_r>
 80014c4:	b118      	cbz	r0, 80014ce <__swbuf_r+0x32>
 80014c6:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 80014ca:	4638      	mov	r0, r7
 80014cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80014ce:	6823      	ldr	r3, [r4, #0]
 80014d0:	6922      	ldr	r2, [r4, #16]
 80014d2:	1a98      	subs	r0, r3, r2
 80014d4:	6963      	ldr	r3, [r4, #20]
 80014d6:	b2f6      	uxtb	r6, r6
 80014d8:	4283      	cmp	r3, r0
 80014da:	4637      	mov	r7, r6
 80014dc:	dc05      	bgt.n	80014ea <__swbuf_r+0x4e>
 80014de:	4621      	mov	r1, r4
 80014e0:	4628      	mov	r0, r5
 80014e2:	f7ff ffb3 	bl	800144c <_fflush_r>
 80014e6:	2800      	cmp	r0, #0
 80014e8:	d1ed      	bne.n	80014c6 <__swbuf_r+0x2a>
 80014ea:	68a3      	ldr	r3, [r4, #8]
 80014ec:	3b01      	subs	r3, #1
 80014ee:	60a3      	str	r3, [r4, #8]
 80014f0:	6823      	ldr	r3, [r4, #0]
 80014f2:	1c5a      	adds	r2, r3, #1
 80014f4:	6022      	str	r2, [r4, #0]
 80014f6:	701e      	strb	r6, [r3, #0]
 80014f8:	6962      	ldr	r2, [r4, #20]
 80014fa:	1c43      	adds	r3, r0, #1
 80014fc:	429a      	cmp	r2, r3
 80014fe:	d004      	beq.n	800150a <__swbuf_r+0x6e>
 8001500:	89a3      	ldrh	r3, [r4, #12]
 8001502:	07db      	lsls	r3, r3, #31
 8001504:	d5e1      	bpl.n	80014ca <__swbuf_r+0x2e>
 8001506:	2e0a      	cmp	r6, #10
 8001508:	d1df      	bne.n	80014ca <__swbuf_r+0x2e>
 800150a:	4621      	mov	r1, r4
 800150c:	4628      	mov	r0, r5
 800150e:	f7ff ff9d 	bl	800144c <_fflush_r>
 8001512:	2800      	cmp	r0, #0
 8001514:	d0d9      	beq.n	80014ca <__swbuf_r+0x2e>
 8001516:	e7d6      	b.n	80014c6 <__swbuf_r+0x2a>

08001518 <__swsetup_r>:
 8001518:	b538      	push	{r3, r4, r5, lr}
 800151a:	4b29      	ldr	r3, [pc, #164]	@ (80015c0 <__swsetup_r+0xa8>)
 800151c:	4605      	mov	r5, r0
 800151e:	6818      	ldr	r0, [r3, #0]
 8001520:	460c      	mov	r4, r1
 8001522:	b118      	cbz	r0, 800152c <__swsetup_r+0x14>
 8001524:	6a03      	ldr	r3, [r0, #32]
 8001526:	b90b      	cbnz	r3, 800152c <__swsetup_r+0x14>
 8001528:	f7ff fa42 	bl	80009b0 <__sinit>
 800152c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001530:	0719      	lsls	r1, r3, #28
 8001532:	d422      	bmi.n	800157a <__swsetup_r+0x62>
 8001534:	06da      	lsls	r2, r3, #27
 8001536:	d407      	bmi.n	8001548 <__swsetup_r+0x30>
 8001538:	2209      	movs	r2, #9
 800153a:	602a      	str	r2, [r5, #0]
 800153c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001540:	81a3      	strh	r3, [r4, #12]
 8001542:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001546:	e033      	b.n	80015b0 <__swsetup_r+0x98>
 8001548:	0758      	lsls	r0, r3, #29
 800154a:	d512      	bpl.n	8001572 <__swsetup_r+0x5a>
 800154c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800154e:	b141      	cbz	r1, 8001562 <__swsetup_r+0x4a>
 8001550:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001554:	4299      	cmp	r1, r3
 8001556:	d002      	beq.n	800155e <__swsetup_r+0x46>
 8001558:	4628      	mov	r0, r5
 800155a:	f7ff fb2b 	bl	8000bb4 <_free_r>
 800155e:	2300      	movs	r3, #0
 8001560:	6363      	str	r3, [r4, #52]	@ 0x34
 8001562:	89a3      	ldrh	r3, [r4, #12]
 8001564:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8001568:	81a3      	strh	r3, [r4, #12]
 800156a:	2300      	movs	r3, #0
 800156c:	6063      	str	r3, [r4, #4]
 800156e:	6923      	ldr	r3, [r4, #16]
 8001570:	6023      	str	r3, [r4, #0]
 8001572:	89a3      	ldrh	r3, [r4, #12]
 8001574:	f043 0308 	orr.w	r3, r3, #8
 8001578:	81a3      	strh	r3, [r4, #12]
 800157a:	6923      	ldr	r3, [r4, #16]
 800157c:	b94b      	cbnz	r3, 8001592 <__swsetup_r+0x7a>
 800157e:	89a3      	ldrh	r3, [r4, #12]
 8001580:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8001584:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8001588:	d003      	beq.n	8001592 <__swsetup_r+0x7a>
 800158a:	4621      	mov	r1, r4
 800158c:	4628      	mov	r0, r5
 800158e:	f000 f84f 	bl	8001630 <__smakebuf_r>
 8001592:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001596:	f013 0201 	ands.w	r2, r3, #1
 800159a:	d00a      	beq.n	80015b2 <__swsetup_r+0x9a>
 800159c:	2200      	movs	r2, #0
 800159e:	60a2      	str	r2, [r4, #8]
 80015a0:	6962      	ldr	r2, [r4, #20]
 80015a2:	4252      	negs	r2, r2
 80015a4:	61a2      	str	r2, [r4, #24]
 80015a6:	6922      	ldr	r2, [r4, #16]
 80015a8:	b942      	cbnz	r2, 80015bc <__swsetup_r+0xa4>
 80015aa:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80015ae:	d1c5      	bne.n	800153c <__swsetup_r+0x24>
 80015b0:	bd38      	pop	{r3, r4, r5, pc}
 80015b2:	0799      	lsls	r1, r3, #30
 80015b4:	bf58      	it	pl
 80015b6:	6962      	ldrpl	r2, [r4, #20]
 80015b8:	60a2      	str	r2, [r4, #8]
 80015ba:	e7f4      	b.n	80015a6 <__swsetup_r+0x8e>
 80015bc:	2000      	movs	r0, #0
 80015be:	e7f7      	b.n	80015b0 <__swsetup_r+0x98>
 80015c0:	2000000c 	.word	0x2000000c

080015c4 <_sbrk_r>:
 80015c4:	b538      	push	{r3, r4, r5, lr}
 80015c6:	4d06      	ldr	r5, [pc, #24]	@ (80015e0 <_sbrk_r+0x1c>)
 80015c8:	2300      	movs	r3, #0
 80015ca:	4604      	mov	r4, r0
 80015cc:	4608      	mov	r0, r1
 80015ce:	602b      	str	r3, [r5, #0]
 80015d0:	f000 f8b4 	bl	800173c <_sbrk>
 80015d4:	1c43      	adds	r3, r0, #1
 80015d6:	d102      	bne.n	80015de <_sbrk_r+0x1a>
 80015d8:	682b      	ldr	r3, [r5, #0]
 80015da:	b103      	cbz	r3, 80015de <_sbrk_r+0x1a>
 80015dc:	6023      	str	r3, [r4, #0]
 80015de:	bd38      	pop	{r3, r4, r5, pc}
 80015e0:	200001b4 	.word	0x200001b4

080015e4 <__swhatbuf_r>:
 80015e4:	b570      	push	{r4, r5, r6, lr}
 80015e6:	460c      	mov	r4, r1
 80015e8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80015ec:	2900      	cmp	r1, #0
 80015ee:	b096      	sub	sp, #88	@ 0x58
 80015f0:	4615      	mov	r5, r2
 80015f2:	461e      	mov	r6, r3
 80015f4:	da0d      	bge.n	8001612 <__swhatbuf_r+0x2e>
 80015f6:	89a3      	ldrh	r3, [r4, #12]
 80015f8:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80015fc:	f04f 0100 	mov.w	r1, #0
 8001600:	bf14      	ite	ne
 8001602:	2340      	movne	r3, #64	@ 0x40
 8001604:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8001608:	2000      	movs	r0, #0
 800160a:	6031      	str	r1, [r6, #0]
 800160c:	602b      	str	r3, [r5, #0]
 800160e:	b016      	add	sp, #88	@ 0x58
 8001610:	bd70      	pop	{r4, r5, r6, pc}
 8001612:	466a      	mov	r2, sp
 8001614:	f000 f848 	bl	80016a8 <_fstat_r>
 8001618:	2800      	cmp	r0, #0
 800161a:	dbec      	blt.n	80015f6 <__swhatbuf_r+0x12>
 800161c:	9901      	ldr	r1, [sp, #4]
 800161e:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8001622:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8001626:	4259      	negs	r1, r3
 8001628:	4159      	adcs	r1, r3
 800162a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800162e:	e7eb      	b.n	8001608 <__swhatbuf_r+0x24>

08001630 <__smakebuf_r>:
 8001630:	898b      	ldrh	r3, [r1, #12]
 8001632:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001634:	079d      	lsls	r5, r3, #30
 8001636:	4606      	mov	r6, r0
 8001638:	460c      	mov	r4, r1
 800163a:	d507      	bpl.n	800164c <__smakebuf_r+0x1c>
 800163c:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8001640:	6023      	str	r3, [r4, #0]
 8001642:	6123      	str	r3, [r4, #16]
 8001644:	2301      	movs	r3, #1
 8001646:	6163      	str	r3, [r4, #20]
 8001648:	b003      	add	sp, #12
 800164a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800164c:	ab01      	add	r3, sp, #4
 800164e:	466a      	mov	r2, sp
 8001650:	f7ff ffc8 	bl	80015e4 <__swhatbuf_r>
 8001654:	9f00      	ldr	r7, [sp, #0]
 8001656:	4605      	mov	r5, r0
 8001658:	4639      	mov	r1, r7
 800165a:	4630      	mov	r0, r6
 800165c:	f7ff fb16 	bl	8000c8c <_malloc_r>
 8001660:	b948      	cbnz	r0, 8001676 <__smakebuf_r+0x46>
 8001662:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001666:	059a      	lsls	r2, r3, #22
 8001668:	d4ee      	bmi.n	8001648 <__smakebuf_r+0x18>
 800166a:	f023 0303 	bic.w	r3, r3, #3
 800166e:	f043 0302 	orr.w	r3, r3, #2
 8001672:	81a3      	strh	r3, [r4, #12]
 8001674:	e7e2      	b.n	800163c <__smakebuf_r+0xc>
 8001676:	89a3      	ldrh	r3, [r4, #12]
 8001678:	6020      	str	r0, [r4, #0]
 800167a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800167e:	81a3      	strh	r3, [r4, #12]
 8001680:	9b01      	ldr	r3, [sp, #4]
 8001682:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8001686:	b15b      	cbz	r3, 80016a0 <__smakebuf_r+0x70>
 8001688:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800168c:	4630      	mov	r0, r6
 800168e:	f000 f81d 	bl	80016cc <_isatty_r>
 8001692:	b128      	cbz	r0, 80016a0 <__smakebuf_r+0x70>
 8001694:	89a3      	ldrh	r3, [r4, #12]
 8001696:	f023 0303 	bic.w	r3, r3, #3
 800169a:	f043 0301 	orr.w	r3, r3, #1
 800169e:	81a3      	strh	r3, [r4, #12]
 80016a0:	89a3      	ldrh	r3, [r4, #12]
 80016a2:	431d      	orrs	r5, r3
 80016a4:	81a5      	strh	r5, [r4, #12]
 80016a6:	e7cf      	b.n	8001648 <__smakebuf_r+0x18>

080016a8 <_fstat_r>:
 80016a8:	b538      	push	{r3, r4, r5, lr}
 80016aa:	4d07      	ldr	r5, [pc, #28]	@ (80016c8 <_fstat_r+0x20>)
 80016ac:	2300      	movs	r3, #0
 80016ae:	4604      	mov	r4, r0
 80016b0:	4608      	mov	r0, r1
 80016b2:	4611      	mov	r1, r2
 80016b4:	602b      	str	r3, [r5, #0]
 80016b6:	f000 f821 	bl	80016fc <_fstat>
 80016ba:	1c43      	adds	r3, r0, #1
 80016bc:	d102      	bne.n	80016c4 <_fstat_r+0x1c>
 80016be:	682b      	ldr	r3, [r5, #0]
 80016c0:	b103      	cbz	r3, 80016c4 <_fstat_r+0x1c>
 80016c2:	6023      	str	r3, [r4, #0]
 80016c4:	bd38      	pop	{r3, r4, r5, pc}
 80016c6:	bf00      	nop
 80016c8:	200001b4 	.word	0x200001b4

080016cc <_isatty_r>:
 80016cc:	b538      	push	{r3, r4, r5, lr}
 80016ce:	4d06      	ldr	r5, [pc, #24]	@ (80016e8 <_isatty_r+0x1c>)
 80016d0:	2300      	movs	r3, #0
 80016d2:	4604      	mov	r4, r0
 80016d4:	4608      	mov	r0, r1
 80016d6:	602b      	str	r3, [r5, #0]
 80016d8:	f000 f818 	bl	800170c <_isatty>
 80016dc:	1c43      	adds	r3, r0, #1
 80016de:	d102      	bne.n	80016e6 <_isatty_r+0x1a>
 80016e0:	682b      	ldr	r3, [r5, #0]
 80016e2:	b103      	cbz	r3, 80016e6 <_isatty_r+0x1a>
 80016e4:	6023      	str	r3, [r4, #0]
 80016e6:	bd38      	pop	{r3, r4, r5, pc}
 80016e8:	200001b4 	.word	0x200001b4

080016ec <_close>:
 80016ec:	4b02      	ldr	r3, [pc, #8]	@ (80016f8 <_close+0xc>)
 80016ee:	2258      	movs	r2, #88	@ 0x58
 80016f0:	601a      	str	r2, [r3, #0]
 80016f2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80016f6:	4770      	bx	lr
 80016f8:	200001b4 	.word	0x200001b4

080016fc <_fstat>:
 80016fc:	4b02      	ldr	r3, [pc, #8]	@ (8001708 <_fstat+0xc>)
 80016fe:	2258      	movs	r2, #88	@ 0x58
 8001700:	601a      	str	r2, [r3, #0]
 8001702:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001706:	4770      	bx	lr
 8001708:	200001b4 	.word	0x200001b4

0800170c <_isatty>:
 800170c:	4b02      	ldr	r3, [pc, #8]	@ (8001718 <_isatty+0xc>)
 800170e:	2258      	movs	r2, #88	@ 0x58
 8001710:	601a      	str	r2, [r3, #0]
 8001712:	2000      	movs	r0, #0
 8001714:	4770      	bx	lr
 8001716:	bf00      	nop
 8001718:	200001b4 	.word	0x200001b4

0800171c <_lseek>:
 800171c:	4b02      	ldr	r3, [pc, #8]	@ (8001728 <_lseek+0xc>)
 800171e:	2258      	movs	r2, #88	@ 0x58
 8001720:	601a      	str	r2, [r3, #0]
 8001722:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001726:	4770      	bx	lr
 8001728:	200001b4 	.word	0x200001b4

0800172c <_read>:
 800172c:	4b02      	ldr	r3, [pc, #8]	@ (8001738 <_read+0xc>)
 800172e:	2258      	movs	r2, #88	@ 0x58
 8001730:	601a      	str	r2, [r3, #0]
 8001732:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001736:	4770      	bx	lr
 8001738:	200001b4 	.word	0x200001b4

0800173c <_sbrk>:
 800173c:	4a04      	ldr	r2, [pc, #16]	@ (8001750 <_sbrk+0x14>)
 800173e:	6811      	ldr	r1, [r2, #0]
 8001740:	4603      	mov	r3, r0
 8001742:	b909      	cbnz	r1, 8001748 <_sbrk+0xc>
 8001744:	4903      	ldr	r1, [pc, #12]	@ (8001754 <_sbrk+0x18>)
 8001746:	6011      	str	r1, [r2, #0]
 8001748:	6810      	ldr	r0, [r2, #0]
 800174a:	4403      	add	r3, r0
 800174c:	6013      	str	r3, [r2, #0]
 800174e:	4770      	bx	lr
 8001750:	200001c4 	.word	0x200001c4
 8001754:	200001c8 	.word	0x200001c8

08001758 <_write>:
 8001758:	4b02      	ldr	r3, [pc, #8]	@ (8001764 <_write+0xc>)
 800175a:	2258      	movs	r2, #88	@ 0x58
 800175c:	601a      	str	r2, [r3, #0]
 800175e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001762:	4770      	bx	lr
 8001764:	200001b4 	.word	0x200001b4

08001768 <_init>:
 8001768:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800176a:	bf00      	nop
 800176c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800176e:	bc08      	pop	{r3}
 8001770:	469e      	mov	lr, r3
 8001772:	4770      	bx	lr

08001774 <_fini>:
 8001774:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001776:	bf00      	nop
 8001778:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800177a:	bc08      	pop	{r3}
 800177c:	469e      	mov	lr, r3
 800177e:	4770      	bx	lr
